<?xml version="1.0" encoding="UTF-8" ?>
<Library name="sap.m" xmlns="http://www.sap.com/ui5/ide/templates/xmlview">
<Template name="sap.m.ActionListItem" alias="ActionListItem,Item">
	<jsTemplate><![CDATA[new sap.m.ActionListItem({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	text: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ActionListItem xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	text=""
	ariaLabelledBy=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</ActionListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ActionSelect" alias="ActionSelect,Select">
	<jsTemplate><![CDATA[new sap.m.ActionSelect({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	name: "", // string
	enabled: true, // boolean
	width: "auto", // sap.ui.core.CSSSize
	maxWidth: "100%", // sap.ui.core.CSSSize
	selectedKey: "", // string, since 1.11
	selectedItemId: "", // string, since 1.12
	icon: "", // sap.ui.core.URI, since 1.16
	type: sap.m.SelectType.Default, // sap.m.SelectType, since 1.16
	autoAdjustWidth: false, // boolean, since 1.16
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.28
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	buttons: [], // sap.m.Button
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ActionSelect xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	name=""
	enabled="true"
	width="auto"
	maxWidth="100%"
	selectedKey=""
	selectedItemId=""
	icon=""
	type="Default"
	autoAdjustWidth="false"
	textAlign="Initial"
	textDirection="Inherit"
	selectedItem=""
	ariaLabelledBy=""
	buttons=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.ui.core.Item -->
</ActionSelect>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ActionSheet" alias="ActionSheet,Sheet">
	<jsTemplate><![CDATA[new sap.m.ActionSheet({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	placement: sap.m.PlacementType.Bottom, // sap.m.PlacementType
	showCancelButton: true, // boolean
	cancelButtonText: undefined, // string
	title: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	buttons: [], // sap.m.Button
	cancelButtonTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	cancelButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ActionSheet xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	placement="Bottom"
	showCancelButton="true"
	cancelButtonText=""
	title=""
	cancelButtonTap=""
	beforeOpen=""
	afterOpen=""
	beforeClose=""
	afterClose=""
	cancelButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<buttons></buttons> <!-- sap.m.Button -->
</ActionSheet>
]]></xmlTemplate>
</Template>
<Template name="sap.m.App" alias="App">
	<jsTemplate><![CDATA[new sap.m.App({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	autoFocus: true, // boolean, since 1.30.8
	height: "100%", // sap.ui.core.CSSSize
	width: "100%", // sap.ui.core.CSSSize
	visible: true, // boolean
	defaultTransitionName: "slide", // string, since 1.7.1
	homeIcon: undefined, // any
	backgroundColor: undefined, // string, since 1.11.2
	backgroundImage: undefined, // sap.ui.core.URI, since 1.11.2
	backgroundRepeat: false, // boolean, since 1.11.2
	backgroundOpacity: 1, // float, since 1.11.2
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	pages: [], // sap.ui.core.Control
	initialPage: undefined, // sap.ui.core.Control
	navigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.7.1
	afterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.7.1
	orientationChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<App xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	autoFocus="true"
	height="100%"
	width="100%"
	visible="true"
	defaultTransitionName="slide"
	homeIcon=""
	backgroundColor=""
	backgroundImage=""
	backgroundRepeat="false"
	backgroundOpacity="1"
	initialPage=""
	navigate=""
	afterNavigate=""
	orientationChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<pages></pages> <!-- sap.ui.core.Control -->
</App>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Bar" alias="Bar">
	<jsTemplate><![CDATA[new sap.m.Bar({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	enableFlexBox: false, // boolean
	translucent: false, // boolean, since 1.12
	design: sap.m.BarDesign.Auto, // sap.m.BarDesign, since 1.22
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	contentLeft: [], // sap.ui.core.Control
	contentMiddle: [], // sap.ui.core.Control
	contentRight: [] // sap.ui.core.Control
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Bar xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	enableFlexBox="false"
	translucent="false"
	design="Auto">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<contentLeft></contentLeft> <!-- sap.ui.core.Control -->
		<contentMiddle></contentMiddle> <!-- sap.ui.core.Control -->
		<contentRight></contentRight> <!-- sap.ui.core.Control -->
</Bar>
]]></xmlTemplate>
</Template>
<Template name="sap.m.BusyDialog" alias="BusyDialog,Dialog">
	<jsTemplate><![CDATA[new sap.m.BusyDialog({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	text: undefined, // string
	title: undefined, // string
	customIcon: undefined, // sap.ui.core.URI
	customIconRotationSpeed: 1000, // int
	customIconDensityAware: true, // boolean
	customIconWidth: "30px", // sap.ui.core.CSSSize
	customIconHeight: "44px", // sap.ui.core.CSSSize
	cancelButtonText: undefined, // string
	showCancelButton: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	close: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<BusyDialog xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	text=""
	title=""
	customIcon=""
	customIconRotationSpeed="1000"
	customIconDensityAware="true"
	customIconWidth="30px"
	customIconHeight="44px"
	cancelButtonText=""
	showCancelButton="false"
	close="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</BusyDialog>
]]></xmlTemplate>
</Template>
<Template name="sap.m.BusyIndicator" alias="BusyIndicator,Indicator">
	<jsTemplate><![CDATA[new sap.m.BusyIndicator({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	text: undefined, // string
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	visible: true, // boolean
	customIcon: undefined, // sap.ui.core.URI
	customIconRotationSpeed: 1000, // int
	customIconDensityAware: true, // boolean
	customIconWidth: "44px", // sap.ui.core.CSSSize
	customIconHeight: "44px", // sap.ui.core.CSSSize
	size: undefined, // sap.ui.core.CSSSize
	design: "auto", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [] // sap.ui.core.Control, since 1.27.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<BusyIndicator xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	text=""
	textDirection="Inherit"
	visible="true"
	customIcon=""
	customIconRotationSpeed="1000"
	customIconDensityAware="true"
	customIconWidth="44px"
	customIconHeight="44px"
	size=""
	design="auto"
	ariaLabelledBy="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</BusyIndicator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Button" alias="Button">
	<jsTemplate><![CDATA[new sap.m.Button({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	text: undefined, // string
	type: sap.m.ButtonType.Default, // sap.m.ButtonType
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	icon: undefined, // sap.ui.core.URI
	iconFirst: true, // boolean
	activeIcon: undefined, // sap.ui.core.URI
	iconDensityAware: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Button xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	text=""
	type="Default"
	width=""
	enabled="true"
	icon=""
	iconFirst="true"
	activeIcon=""
	iconDensityAware="true"
	textDirection="Inherit"
	ariaDescribedBy=""
	ariaLabelledBy=""
	tap=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</Button>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Carousel" alias="Carousel">
	<jsTemplate><![CDATA[new sap.m.Carousel({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	height: "100%", // sap.ui.core.CSSSize
	width: "100%", // sap.ui.core.CSSSize
	loop: false, // boolean
	showPageIndicator: true, // boolean
	pageIndicatorPlacement: sap.m.PlacementType.Bottom, // sap.m.PlacementType
	showBusyIndicator: true, // boolean
	busyIndicatorSize: "6em", // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	pages: [], // sap.ui.core.Control
	activePage: undefined, // sap.ui.core.Control
	loadPage: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	unloadPage: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	pageChanged: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Carousel xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	height="100%"
	width="100%"
	loop="false"
	showPageIndicator="true"
	pageIndicatorPlacement="Bottom"
	showBusyIndicator="true"
	busyIndicatorSize="6em"
	activePage=""
	loadPage=""
	unloadPage=""
	pageChanged="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<pages></pages> <!-- sap.ui.core.Control -->
</Carousel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.CheckBox" alias="CheckBox,Box">
	<jsTemplate><![CDATA[new sap.m.CheckBox({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	selected: false, // boolean
	enabled: true, // boolean
	name: undefined, // string
	text: undefined, // string
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	textAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign
	width: "", // sap.ui.core.CSSSize
	activeHandling: true, // boolean
	editable: true, // boolean, since 1.25
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<CheckBox xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	selected="false"
	enabled="true"
	name=""
	text=""
	textDirection="Inherit"
	textAlign="Begin"
	width=""
	activeHandling="true"
	editable="true"
	ariaDescribedBy=""
	ariaLabelledBy=""
	select="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</CheckBox>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Column" alias="Column">
	<jsTemplate><![CDATA[new sap.m.Column({
	id: "${id}", // sap.ui.core.ID
	width: undefined, // sap.ui.core.CSSSize
	hAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign
	vAlign: sap.ui.core.VerticalAlign.Inherit, // sap.ui.core.VerticalAlign
	styleClass: undefined, // string
	visible: true, // boolean
	minScreenWidth: undefined, // string
	demandPopin: false, // boolean
	popinHAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign
	popinDisplay: sap.m.PopinDisplay.Block, // sap.m.PopinDisplay, since 1.13.2
	mergeDuplicates: false, // boolean, since 1.16
	mergeFunctionName: "getText", // string, since 1.16
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	header: undefined, // sap.ui.core.Control
	footer: undefined // sap.ui.core.Control
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Column xmlns="sap.m"
	id="${id}"
	width=""
	hAlign="Begin"
	vAlign="Inherit"
	styleClass=""
	visible="true"
	minScreenWidth=""
	demandPopin="false"
	popinHAlign="Begin"
	popinDisplay="Block"
	mergeDuplicates="false"
	mergeFunctionName="getText">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<header></header> <!-- sap.ui.core.Control -->
		<footer></footer> <!-- sap.ui.core.Control -->
</Column>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ColumnListItem" alias="ColumnListItem,Item">
	<jsTemplate><![CDATA[new sap.m.ColumnListItem({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	vAlign: sap.ui.core.VerticalAlign.Inherit, // sap.ui.core.VerticalAlign, since 1.20
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	cells: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ColumnListItem xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	vAlign="Inherit"
	ariaLabelledBy=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<cells></cells> <!-- sap.ui.core.Control -->
</ColumnListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ComboBox" alias="ComboBox,Box">
	<jsTemplate><![CDATA[new sap.m.ComboBox({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	maxWidth: "100%", // sap.ui.core.CSSSize
	selectedKey: "", // string
	selectedItemId: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.ui.core.Item
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	selectedItem: undefined, // sap.ui.core.Item
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ComboBox xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	maxWidth="100%"
	selectedKey=""
	selectedItemId=""
	ariaLabelledBy=""
	selectedItem=""
	change=""
	selectionChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.ui.core.Item -->
</ComboBox>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ComboBoxBase" alias="ComboBoxBase,Base">
	<jsTemplate><![CDATA[new sap.m.ComboBoxBase({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	maxWidth: "100%", // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.ui.core.Item
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ComboBoxBase xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	maxWidth="100%"
	ariaLabelledBy=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.ui.core.Item -->
</ComboBoxBase>
]]></xmlTemplate>
</Template>
<Template name="sap.m.CustomListItem" alias="CustomListItem,Item">
	<jsTemplate><![CDATA[new sap.m.CustomListItem({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<CustomListItem xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	ariaLabelledBy=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
</CustomListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.CustomTile" alias="CustomTile,Tile">
	<jsTemplate><![CDATA[new sap.m.CustomTile({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	removable: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: undefined, // sap.ui.core.Control
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<CustomTile xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	removable="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
</CustomTile>
]]></xmlTemplate>
</Template>
<Template name="sap.m.DatePicker" alias="DatePicker,Picker">
	<jsTemplate><![CDATA[new sap.m.DatePicker({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	displayFormat: undefined, // string
	valueFormat: undefined, // string
	dateValue: undefined, // object
	displayFormatType: "", // string, since 1.28.6
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<DatePicker xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	displayFormat=""
	valueFormat=""
	dateValue=""
	displayFormatType=""
	ariaLabelledBy=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</DatePicker>
]]></xmlTemplate>
</Template>
<Template name="sap.m.DateRangeSelection" alias="DateRangeSelection,Selection">
	<jsTemplate><![CDATA[new sap.m.DateRangeSelection({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	displayFormat: undefined, // string
	valueFormat: undefined, // string
	dateValue: undefined, // object
	displayFormatType: "", // string, since 1.28.6
	delimiter: "-", // string
	secondDateValue: undefined, // object
	from: undefined, // object
	to: undefined, // object
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<DateRangeSelection xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	displayFormat=""
	valueFormat=""
	dateValue=""
	displayFormatType=""
	delimiter="-"
	secondDateValue=""
	from=""
	to=""
	ariaLabelledBy=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</DateRangeSelection>
]]></xmlTemplate>
</Template>
<Template name="sap.m.DateTimeInput" alias="DateTimeInput,Input">
	<jsTemplate><![CDATA[new sap.m.DateTimeInput({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	type: sap.m.DateTimeInputType.Date, // sap.m.DateTimeInputType
	displayFormat: undefined, // string
	valueFormat: undefined, // string
	dateValue: undefined, // object
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<DateTimeInput xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	type="Date"
	displayFormat=""
	valueFormat=""
	dateValue=""
	ariaLabelledBy=""
	change=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</DateTimeInput>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Dialog" alias="Dialog">
	<jsTemplate><![CDATA[new sap.m.Dialog({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	icon: undefined, // sap.ui.core.URI
	title: undefined, // string
	showHeader: true, // boolean, since 1.15.1
	type: sap.m.DialogType.Standard, // sap.m.DialogType
	state: sap.ui.core.ValueState.None, // sap.ui.core.ValueState, since 1.11.2
	stretchOnPhone: false, // boolean, since 1.11.2
	stretch: false, // boolean, since 1.13.1
	contentWidth: undefined, // sap.ui.core.CSSSize, since 1.12.1
	contentHeight: undefined, // sap.ui.core.CSSSize, since 1.12.1
	horizontalScrolling: true, // boolean, since 1.15.1
	verticalScrolling: true, // boolean, since 1.15.1
	resizable: false, // boolean, since 1.30
	draggable: false, // boolean, since 1.30
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [], // sap.ui.core.Control
	subHeader: undefined, // sap.m.IBar, since 1.12.2
	customHeader: undefined, // sap.m.IBar, since 1.15.1
	beginButton: undefined, // sap.m.Button, since 1.15.1
	endButton: undefined, // sap.m.Button, since 1.15.1
	buttons: [], // sap.m.Button, since 1.21.1
	leftButton: undefined, // sap.m.Button
	rightButton: undefined, // sap.m.Button
	initialFocus: undefined, // sap.ui.core.Control, since 1.15.0
	ariaDescribedBy: [], // sap.ui.core.Control
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Dialog xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	icon=""
	title=""
	showHeader="true"
	type="Standard"
	state="None"
	stretchOnPhone="false"
	stretch="false"
	contentWidth=""
	contentHeight=""
	horizontalScrolling="true"
	verticalScrolling="true"
	resizable="false"
	draggable="false"
	leftButton=""
	rightButton=""
	initialFocus=""
	ariaDescribedBy=""
	beforeOpen=""
	afterOpen=""
	beforeClose=""
	afterClose="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
		<subHeader></subHeader> <!-- sap.m.IBar, since 1.12.2 -->
		<customHeader></customHeader> <!-- sap.m.IBar, since 1.15.1 -->
		<beginButton></beginButton> <!-- sap.m.Button, since 1.15.1 -->
		<endButton></endButton> <!-- sap.m.Button, since 1.15.1 -->
		<buttons></buttons> <!-- sap.m.Button, since 1.21.1 -->
</Dialog>
]]></xmlTemplate>
</Template>
<Template name="sap.m.DisplayListItem" alias="DisplayListItem,Item">
	<jsTemplate><![CDATA[new sap.m.DisplayListItem({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	label: undefined, // string
	value: undefined, // string
	valueTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<DisplayListItem xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	label=""
	value=""
	valueTextDirection="Inherit"
	ariaLabelledBy=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</DisplayListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FacetFilter" alias="FacetFilter,Filter">
	<jsTemplate><![CDATA[new sap.m.FacetFilter({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	showPersonalization: false, // boolean
	type: sap.m.FacetFilterType.Simple, // sap.m.FacetFilterType
	liveSearch: true, // boolean
	showSummaryBar: false, // boolean
	showReset: true, // boolean
	showPopoverOKButton: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	lists: [], // sap.m.FacetFilterList
	reset: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FacetFilter xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	showPersonalization="false"
	type="Simple"
	liveSearch="true"
	showSummaryBar="false"
	showReset="true"
	showPopoverOKButton="false"
	reset="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<lists></lists> <!-- sap.m.FacetFilterList -->
</FacetFilter>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FacetFilterItem" alias="FacetFilterItem,Item">
	<jsTemplate><![CDATA[new sap.m.FacetFilterItem({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	key: undefined, // string
	text: undefined, // string
	count: undefined, // int
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FacetFilterItem xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	key=""
	text=""
	count=""
	ariaLabelledBy=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</FacetFilterItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FacetFilterList" alias="FacetFilterList,List">
	<jsTemplate><![CDATA[new sap.m.FacetFilterList({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	inset: false, // boolean
	headerText: undefined, // string
	headerDesign: sap.m.ListHeaderDesign.Standard, // sap.m.ListHeaderDesign, since 1.14
	footerText: undefined, // string
	mode: sap.m.ListMode.None, // sap.m.ListMode
	width: "100%", // sap.ui.core.CSSSize
	includeItemInSelection: false, // boolean
	showUnread: false, // boolean
	noDataText: undefined, // string
	showNoData: true, // boolean
	enableBusyIndicator: true, // boolean, since 1.20.2
	modeAnimationOn: true, // boolean
	showSeparators: sap.m.ListSeparators.All, // sap.m.ListSeparators
	swipeDirection: sap.m.SwipeDirection.Both, // sap.m.SwipeDirection
	growing: false, // boolean, since 1.16
	growingThreshold: 20, // int, since 1.16
	growingTriggerText: undefined, // string, since 1.16
	growingScrollToLoad: false, // boolean, since 1.16
	rememberSelections: true, // boolean, since 1.16.6
	backgroundDesign: sap.m.BackgroundDesign.Solid, // sap.m.BackgroundDesign, since 1.14
	title: undefined, // string
	wordWrap: false, // boolean
	multiSelect: true, // boolean
	active: true, // boolean
	enableCaseInsensitiveSearch: false, // boolean
	allCount: undefined, // int
	sequence: -1, // int
	key: undefined, // string
	showRemoveFacetIcon: true, // boolean, since 1.20.4
	retainListSequence: false, // boolean, since 1.22.1
	dataType: sap.m.FacetFilterListDataType.String, // sap.m.FacetFilterListDataType
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.ListItemBase
	swipeContent: undefined, // sap.ui.core.Control
	headerToolbar: undefined, // sap.m.Toolbar, since 1.16
	infoToolbar: undefined, // sap.m.Toolbar, since 1.16
	columns: [], // sap.m.Column
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	"delete": [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	swipe: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	growingStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	growingFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	updateStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	updateFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	itemPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.20
	listOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	listClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FacetFilterList xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	inset="false"
	headerText=""
	headerDesign="Standard"
	footerText=""
	mode="None"
	width="100%"
	includeItemInSelection="false"
	showUnread="false"
	noDataText=""
	showNoData="true"
	enableBusyIndicator="true"
	modeAnimationOn="true"
	showSeparators="All"
	swipeDirection="Both"
	growing="false"
	growingThreshold="20"
	growingTriggerText=""
	growingScrollToLoad="false"
	rememberSelections="true"
	backgroundDesign="Solid"
	title=""
	wordWrap="false"
	multiSelect="true"
	active="true"
	enableCaseInsensitiveSearch="false"
	allCount=""
	sequence="-1"
	key=""
	showRemoveFacetIcon="true"
	retainListSequence="false"
	dataType="String"
	ariaLabelledBy=""
	select=""
	selectionChange=""
	"delete"=""
	swipe=""
	growingStarted=""
	growingFinished=""
	updateStarted=""
	updateFinished=""
	itemPress=""
	listOpen=""
	listClose="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.ListItemBase -->
		<swipeContent></swipeContent> <!-- sap.ui.core.Control -->
		<headerToolbar></headerToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<columns></columns> <!-- sap.m.Column -->
</FacetFilterList>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FeedInput" alias="FeedInput,Input">
	<jsTemplate><![CDATA[new sap.m.FeedInput({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	enabled: true, // boolean
	maxLength: 0, // int
	placeholder: "Post something here", // string
	value: undefined, // string
	icon: undefined, // sap.ui.core.URI
	showIcon: true, // boolean
	iconDensityAware: true, // boolean
	buttonTooltip: "Submit", // string, since 1.28
	ariaLabelForPicture: undefined, // string, since 1.30
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	post: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FeedInput xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	enabled="true"
	maxLength="0"
	placeholder="Post something here"
	value=""
	icon=""
	showIcon="true"
	iconDensityAware="true"
	buttonTooltip="Submit"
	ariaLabelForPicture=""
	post="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</FeedInput>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FeedListItem" alias="FeedListItem,Item">
	<jsTemplate><![CDATA[new sap.m.FeedListItem({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	icon: undefined, // sap.ui.core.URI
	activeIcon: undefined, // sap.ui.core.URI
	sender: undefined, // string
	text: undefined, // string
	info: undefined, // string
	timestamp: undefined, // string
	senderActive: true, // boolean
	iconActive: true, // boolean
	iconDensityAware: true, // boolean
	showIcon: true, // boolean
	maxCharacters: undefined, // int
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	senderPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	iconPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FeedListItem xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	icon=""
	activeIcon=""
	sender=""
	text=""
	info=""
	timestamp=""
	senderActive="true"
	iconActive="true"
	iconDensityAware="true"
	showIcon="true"
	maxCharacters=""
	ariaLabelledBy=""
	tap=""
	detailTap=""
	press=""
	detailPress=""
	senderPress=""
	iconPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</FeedListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FlexBox" alias="FlexBox,Box">
	<jsTemplate><![CDATA[new sap.m.FlexBox({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	height: "", // sap.ui.core.CSSSize, since 1.9.1
	width: "", // sap.ui.core.CSSSize, since 1.9.1
	displayInline: false, // boolean
	direction: sap.m.FlexDirection.Row, // sap.m.FlexDirection
	fitContainer: false, // boolean
	renderType: sap.m.FlexRendertype.Div, // sap.m.FlexRendertype
	justifyContent: sap.m.FlexJustifyContent.Start, // sap.m.FlexJustifyContent
	alignItems: sap.m.FlexAlignItems.Stretch, // sap.m.FlexAlignItems
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [] // sap.ui.core.Control
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FlexBox xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	height=""
	width=""
	displayInline="false"
	direction="Row"
	fitContainer="false"
	renderType="Div"
	justifyContent="Start"
	alignItems="Stretch">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.ui.core.Control -->
</FlexBox>
]]></xmlTemplate>
</Template>
<Template name="sap.m.FlexItemData" alias="FlexItemData,Data">
	<jsTemplate><![CDATA[new sap.m.FlexItemData({
	id: "${id}", // sap.ui.core.ID
	alignSelf: sap.m.FlexAlignSelf.Auto, // sap.m.FlexAlignSelf
	order: 0, // int
	growFactor: 0, // float
	shrinkFactor: 1, // float, since 1.24
	styleClass: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<FlexItemData xmlns="sap.m"
	id="${id}"
	alignSelf="Auto"
	order="0"
	growFactor="0"
	shrinkFactor="1"
	styleClass="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</FlexItemData>
]]></xmlTemplate>
</Template>
<Template name="sap.m.GroupHeaderListItem" alias="GroupHeaderListItem,Item">
	<jsTemplate><![CDATA[new sap.m.GroupHeaderListItem({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	title: undefined, // string
	count: undefined, // string
	upperCase: true, // boolean, since 1.13.2
	titleTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<GroupHeaderListItem xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	title=""
	count=""
	upperCase="true"
	titleTextDirection="Inherit"
	ariaLabelledBy=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</GroupHeaderListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.GrowingList" alias="GrowingList,List">
	<jsTemplate><![CDATA[new sap.m.GrowingList({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	inset: false, // boolean
	headerText: undefined, // string
	headerDesign: sap.m.ListHeaderDesign.Standard, // sap.m.ListHeaderDesign, since 1.14
	footerText: undefined, // string
	mode: sap.m.ListMode.None, // sap.m.ListMode
	width: "100%", // sap.ui.core.CSSSize
	includeItemInSelection: false, // boolean
	showUnread: false, // boolean
	noDataText: undefined, // string
	showNoData: true, // boolean
	enableBusyIndicator: true, // boolean, since 1.20.2
	modeAnimationOn: true, // boolean
	showSeparators: sap.m.ListSeparators.All, // sap.m.ListSeparators
	swipeDirection: sap.m.SwipeDirection.Both, // sap.m.SwipeDirection
	growing: false, // boolean, since 1.16
	growingThreshold: 20, // int, since 1.16
	growingTriggerText: undefined, // string, since 1.16
	growingScrollToLoad: false, // boolean, since 1.16
	rememberSelections: true, // boolean, since 1.16.6
	backgroundDesign: sap.m.BackgroundDesign.Solid, // sap.m.BackgroundDesign, since 1.14
	threshold: 20, // int, since 1.16
	triggerText: undefined, // string, since 1.16
	scrollToLoad: false, // boolean, since 1.16
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.ListItemBase
	swipeContent: undefined, // sap.ui.core.Control
	headerToolbar: undefined, // sap.m.Toolbar, since 1.16
	infoToolbar: undefined, // sap.m.Toolbar, since 1.16
	columns: [], // sap.m.Column
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	"delete": [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	swipe: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	growingStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	growingFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	updateStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	updateFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	itemPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.20
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<GrowingList xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	inset="false"
	headerText=""
	headerDesign="Standard"
	footerText=""
	mode="None"
	width="100%"
	includeItemInSelection="false"
	showUnread="false"
	noDataText=""
	showNoData="true"
	enableBusyIndicator="true"
	modeAnimationOn="true"
	showSeparators="All"
	swipeDirection="Both"
	growing="false"
	growingThreshold="20"
	growingTriggerText=""
	growingScrollToLoad="false"
	rememberSelections="true"
	backgroundDesign="Solid"
	threshold="20"
	triggerText=""
	scrollToLoad="false"
	ariaLabelledBy=""
	select=""
	selectionChange=""
	"delete"=""
	swipe=""
	growingStarted=""
	growingFinished=""
	updateStarted=""
	updateFinished=""
	itemPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.ListItemBase -->
		<swipeContent></swipeContent> <!-- sap.ui.core.Control -->
		<headerToolbar></headerToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<columns></columns> <!-- sap.m.Column -->
</GrowingList>
]]></xmlTemplate>
</Template>
<Template name="sap.m.HBox" alias="HBox">
	<jsTemplate><![CDATA[new sap.m.HBox({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	height: "", // sap.ui.core.CSSSize, since 1.9.1
	width: "", // sap.ui.core.CSSSize, since 1.9.1
	displayInline: false, // boolean
	direction: sap.m.FlexDirection.Row, // sap.m.FlexDirection
	fitContainer: false, // boolean
	renderType: sap.m.FlexRendertype.Div, // sap.m.FlexRendertype
	justifyContent: sap.m.FlexJustifyContent.Start, // sap.m.FlexJustifyContent
	alignItems: sap.m.FlexAlignItems.Stretch, // sap.m.FlexAlignItems
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [] // sap.ui.core.Control
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<HBox xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	height=""
	width=""
	displayInline="false"
	direction="Row"
	fitContainer="false"
	renderType="Div"
	justifyContent="Start"
	alignItems="Stretch">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.ui.core.Control -->
</HBox>
]]></xmlTemplate>
</Template>
<Template name="sap.m.IconTabBar" alias="IconTabBar,Bar">
	<jsTemplate><![CDATA[new sap.m.IconTabBar({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	showSelection: true, // boolean
	expandable: true, // boolean, since 1.15.0
	expanded: true, // boolean, since 1.15.0
	selectedKey: undefined, // string, since 1.15.0
	upperCase: false, // boolean, since 1.22
	stretchContentHeight: false, // boolean, since 1.26
	applyContentPadding: true, // boolean, since 1.26
	backgroundDesign: sap.m.BackgroundDesign.Solid, // sap.m.BackgroundDesign, since 1.26
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.IconTab
	content: [], // sap.ui.core.Control
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	expand: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.15.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<IconTabBar xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	showSelection="true"
	expandable="true"
	expanded="true"
	selectedKey=""
	upperCase="false"
	stretchContentHeight="false"
	applyContentPadding="true"
	backgroundDesign="Solid"
	select=""
	expand="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.IconTab -->
		<content></content> <!-- sap.ui.core.Control -->
</IconTabBar>
]]></xmlTemplate>
</Template>
<Template name="sap.m.IconTabFilter" alias="IconTabFilter,Filter">
	<jsTemplate><![CDATA[new sap.m.IconTabFilter({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	count: "", // string
	showAll: false, // boolean
	icon: "", // sap.ui.core.URI
	iconColor: sap.ui.core.IconColor.Default, // sap.ui.core.IconColor
	iconDensityAware: true, // boolean
	visible: true, // boolean
	design: sap.m.IconTabFilterDesign.Vertical, // sap.m.IconTabFilterDesign
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [] // sap.ui.core.Control, since 1.15.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<IconTabFilter xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	count=""
	showAll="false"
	icon=""
	iconColor="Default"
	iconDensityAware="true"
	visible="true"
	design="Vertical">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control, since 1.15.0 -->
</IconTabFilter>
]]></xmlTemplate>
</Template>
<Template name="sap.m.IconTabHeader" alias="IconTabHeader,Header">
	<jsTemplate><![CDATA[new sap.m.IconTabHeader({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	showSelection: true, // boolean
	selectedKey: undefined, // string, since 1.15.0
	visible: true, // boolean, since 1.15.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.IconTab
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<IconTabHeader xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	showSelection="true"
	selectedKey=""
	visible="true"
	select="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.IconTab -->
</IconTabHeader>
]]></xmlTemplate>
</Template>
<Template name="sap.m.IconTabSeparator" alias="IconTabSeparator,Separator">
	<jsTemplate><![CDATA[new sap.m.IconTabSeparator({
	id: "${id}", // sap.ui.core.ID
	icon: "", // sap.ui.core.URI
	iconDensityAware: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<IconTabSeparator xmlns="sap.m"
	id="${id}"
	icon=""
	iconDensityAware="true">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</IconTabSeparator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Image" alias="Image">
	<jsTemplate><![CDATA[new sap.m.Image({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	src: undefined, // sap.ui.core.URI
	width: undefined, // sap.ui.core.CSSSize
	height: undefined, // sap.ui.core.CSSSize
	decorative: true, // boolean
	alt: undefined, // string
	useMap: undefined, // string
	densityAware: true, // boolean
	activeSrc: "", // sap.ui.core.URI
	mode: sap.m.ImageMode.Image, // sap.m.ImageMode, since 1.30.0
	backgroundSize: "cover", // string, since 1.30.0
	backgroundPosition: "initial", // string, since 1.30.0
	backgroundRepeat: "no-repeat", // string, since 1.30.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Image xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	src=""
	width=""
	height=""
	decorative="true"
	alt=""
	useMap=""
	densityAware="true"
	activeSrc=""
	mode="Image"
	backgroundSize="cover"
	backgroundPosition="initial"
	backgroundRepeat="no-repeat"
	tap=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</Image>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Input" alias="Input">
	<jsTemplate><![CDATA[new sap.m.Input({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	type: sap.m.InputType.Text, // sap.m.InputType
	maxLength: 0, // int
	dateFormat: "YYYY-MM-dd", // string
	showValueHelp: false, // boolean, since 1.16
	showSuggestion: false, // boolean, since 1.16.1
	valueHelpOnly: false, // boolean, since 1.21.0
	filterSuggests: true, // boolean
	maxSuggestionWidth: undefined, // sap.ui.core.CSSSize, since 1.21.1
	startSuggestion: 1, // int, since 1.21.2
	showTableSuggestionValueHelp: true, // boolean, since 1.22.1
	description: undefined, // string
	fieldWidth: "50%", // sap.ui.core.CSSSize
	valueLiveUpdate: false, // boolean, since 1.24
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	suggestionItems: [], // sap.ui.core.Item, since 1.16.1
	suggestionColumns: [], // sap.m.Column, since 1.21.1
	suggestionRows: [], // sap.m.ColumnListItem, since 1.21.1
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	valueHelpRequest: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	suggest: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.1
	suggestionItemSelected: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.16.3
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Input xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	type="Text"
	maxLength="0"
	dateFormat="YYYY-MM-dd"
	showValueHelp="false"
	showSuggestion="false"
	valueHelpOnly="false"
	filterSuggests="true"
	maxSuggestionWidth=""
	startSuggestion="1"
	showTableSuggestionValueHelp="true"
	description=""
	fieldWidth="50%"
	valueLiveUpdate="false"
	ariaLabelledBy=""
	change=""
	liveChange=""
	valueHelpRequest=""
	suggest=""
	suggestionItemSelected="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<suggestionItems></suggestionItems> <!-- sap.ui.core.Item, since 1.16.1 -->
		<suggestionColumns></suggestionColumns> <!-- sap.m.Column, since 1.21.1 -->
		<suggestionRows></suggestionRows> <!-- sap.m.ColumnListItem, since 1.21.1 -->
</Input>
]]></xmlTemplate>
</Template>
<Template name="sap.m.InputBase" alias="InputBase,Base">
	<jsTemplate><![CDATA[new sap.m.InputBase({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<InputBase xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	ariaLabelledBy=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</InputBase>
]]></xmlTemplate>
</Template>
<Template name="sap.m.InputListItem" alias="InputListItem,Item">
	<jsTemplate><![CDATA[new sap.m.InputListItem({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	label: undefined, // string
	labelTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.30.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<InputListItem xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	label=""
	labelTextDirection="Inherit"
	ariaLabelledBy=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
</InputListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Label" alias="Label">
	<jsTemplate><![CDATA[new sap.m.Label({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	design: sap.m.LabelDesign.Standard, // sap.m.LabelDesign
	text: undefined, // string
	textAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	width: "", // sap.ui.core.CSSSize
	required: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	labelFor: undefined // sap.ui.core.Control
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Label xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	design="Standard"
	text=""
	textAlign="Begin"
	textDirection="Inherit"
	width=""
	required="false"
	labelFor="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</Label>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Link" alias="Link">
	<jsTemplate><![CDATA[new sap.m.Link({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	text: "", // string
	enabled: true, // boolean
	target: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	href: undefined, // sap.ui.core.URI
	wrapping: false, // boolean
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.28.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	subtle: false, // boolean, since 1.22
	emphasized: false, // boolean, since 1.22
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Link xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	text=""
	enabled="true"
	target=""
	width=""
	href=""
	wrapping="false"
	textAlign="Initial"
	textDirection="Inherit"
	subtle="false"
	emphasized="false"
	ariaDescribedBy=""
	ariaLabelledBy=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</Link>
]]></xmlTemplate>
</Template>
<Template name="sap.m.List" alias="List">
	<jsTemplate><![CDATA[new sap.m.List({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	inset: false, // boolean
	headerText: undefined, // string
	headerDesign: sap.m.ListHeaderDesign.Standard, // sap.m.ListHeaderDesign, since 1.14
	footerText: undefined, // string
	mode: sap.m.ListMode.None, // sap.m.ListMode
	width: "100%", // sap.ui.core.CSSSize
	includeItemInSelection: false, // boolean
	showUnread: false, // boolean
	noDataText: undefined, // string
	showNoData: true, // boolean
	enableBusyIndicator: true, // boolean, since 1.20.2
	modeAnimationOn: true, // boolean
	showSeparators: sap.m.ListSeparators.All, // sap.m.ListSeparators
	swipeDirection: sap.m.SwipeDirection.Both, // sap.m.SwipeDirection
	growing: false, // boolean, since 1.16
	growingThreshold: 20, // int, since 1.16
	growingTriggerText: undefined, // string, since 1.16
	growingScrollToLoad: false, // boolean, since 1.16
	rememberSelections: true, // boolean, since 1.16.6
	backgroundDesign: sap.m.BackgroundDesign.Solid, // sap.m.BackgroundDesign, since 1.14
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.ListItemBase
	swipeContent: undefined, // sap.ui.core.Control
	headerToolbar: undefined, // sap.m.Toolbar, since 1.16
	infoToolbar: undefined, // sap.m.Toolbar, since 1.16
	columns: [], // sap.m.Column
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	"delete": [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	swipe: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	growingStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	growingFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	updateStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	updateFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	itemPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.20
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<List xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	inset="false"
	headerText=""
	headerDesign="Standard"
	footerText=""
	mode="None"
	width="100%"
	includeItemInSelection="false"
	showUnread="false"
	noDataText=""
	showNoData="true"
	enableBusyIndicator="true"
	modeAnimationOn="true"
	showSeparators="All"
	swipeDirection="Both"
	growing="false"
	growingThreshold="20"
	growingTriggerText=""
	growingScrollToLoad="false"
	rememberSelections="true"
	backgroundDesign="Solid"
	ariaLabelledBy=""
	select=""
	selectionChange=""
	"delete"=""
	swipe=""
	growingStarted=""
	growingFinished=""
	updateStarted=""
	updateFinished=""
	itemPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.ListItemBase -->
		<swipeContent></swipeContent> <!-- sap.ui.core.Control -->
		<headerToolbar></headerToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<columns></columns> <!-- sap.m.Column -->
</List>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ListBase" alias="ListBase,Base">
	<jsTemplate><![CDATA[new sap.m.ListBase({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	inset: false, // boolean
	headerText: undefined, // string
	headerDesign: sap.m.ListHeaderDesign.Standard, // sap.m.ListHeaderDesign, since 1.14
	footerText: undefined, // string
	mode: sap.m.ListMode.None, // sap.m.ListMode
	width: "100%", // sap.ui.core.CSSSize
	includeItemInSelection: false, // boolean
	showUnread: false, // boolean
	noDataText: undefined, // string
	showNoData: true, // boolean
	enableBusyIndicator: true, // boolean, since 1.20.2
	modeAnimationOn: true, // boolean
	showSeparators: sap.m.ListSeparators.All, // sap.m.ListSeparators
	swipeDirection: sap.m.SwipeDirection.Both, // sap.m.SwipeDirection
	growing: false, // boolean, since 1.16
	growingThreshold: 20, // int, since 1.16
	growingTriggerText: undefined, // string, since 1.16
	growingScrollToLoad: false, // boolean, since 1.16
	rememberSelections: true, // boolean, since 1.16.6
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.ListItemBase
	swipeContent: undefined, // sap.ui.core.Control
	headerToolbar: undefined, // sap.m.Toolbar, since 1.16
	infoToolbar: undefined, // sap.m.Toolbar, since 1.16
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	"delete": [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	swipe: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	growingStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	growingFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	updateStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	updateFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	itemPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.20
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ListBase xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	inset="false"
	headerText=""
	headerDesign="Standard"
	footerText=""
	mode="None"
	width="100%"
	includeItemInSelection="false"
	showUnread="false"
	noDataText=""
	showNoData="true"
	enableBusyIndicator="true"
	modeAnimationOn="true"
	showSeparators="All"
	swipeDirection="Both"
	growing="false"
	growingThreshold="20"
	growingTriggerText=""
	growingScrollToLoad="false"
	rememberSelections="true"
	ariaLabelledBy=""
	select=""
	selectionChange=""
	"delete"=""
	swipe=""
	growingStarted=""
	growingFinished=""
	updateStarted=""
	updateFinished=""
	itemPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.ListItemBase -->
		<swipeContent></swipeContent> <!-- sap.ui.core.Control -->
		<headerToolbar></headerToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.16 -->
</ListBase>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ListItemBase" alias="ListItemBase,Base">
	<jsTemplate><![CDATA[new sap.m.ListItemBase({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ListItemBase xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	ariaLabelledBy=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</ListItemBase>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MessagePage" alias="MessagePage,Page">
	<jsTemplate><![CDATA[new sap.m.MessagePage({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	text: "No matching items found.", // string
	description: "Check the filter settings.", // string
	title: undefined, // string
	showHeader: true, // boolean
	showNavButton: false, // boolean
	icon: "sap-icon://documents", // sap.ui.core.URI
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	customText: undefined, // sap.m.Link
	customDescription: undefined, // sap.m.Link
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.28.1
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MessagePage xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	text="No matching items found."
	description="Check the filter settings."
	title=""
	showHeader="true"
	showNavButton="false"
	icon="sap-icon://documents"
	textDirection="Inherit"
	ariaDescribedBy=""
	ariaLabelledBy=""
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<customText></customText> <!-- sap.m.Link -->
		<customDescription></customDescription> <!-- sap.m.Link -->
</MessagePage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MessagePopover" alias="MessagePopover,Popover">
	<jsTemplate><![CDATA[new sap.m.MessagePopover({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	asyncDescriptionHandler: undefined, // any
	asyncURLHandler: undefined, // any
	placement: sap.m.VerticalPlacementType.Vertical, // sap.m.VerticalPlacementType
	initiallyExpanded: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.MessagePopoverItem
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	itemSelect: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	listSelect: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MessagePopover xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	asyncDescriptionHandler=""
	asyncURLHandler=""
	placement="Vertical"
	initiallyExpanded="true"
	afterOpen=""
	afterClose=""
	beforeOpen=""
	beforeClose=""
	itemSelect=""
	listSelect="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.MessagePopoverItem -->
</MessagePopover>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MessagePopoverItem" alias="MessagePopoverItem,Item">
	<jsTemplate><![CDATA[new sap.m.MessagePopoverItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	type: sap.ui.core.MessageType.Error, // sap.ui.core.MessageType
	title: undefined, // string
	description: undefined, // string
	markupDescription: false, // boolean
	longtextUrl: undefined, // sap.ui.core.URI
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MessagePopoverItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	type="Error"
	title=""
	description=""
	markupDescription="false"
	longtextUrl="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</MessagePopoverItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MessageStrip" alias="MessageStrip,Strip">
	<jsTemplate><![CDATA[new sap.m.MessageStrip({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	text: "", // string
	type: sap.ui.core.MessageType.Information, // sap.ui.core.MessageType
	customIcon: "", // sap.ui.core.URI
	showIcon: false, // boolean
	showCloseButton: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	link: undefined, // sap.m.Link
	close: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MessageStrip xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	text=""
	type="Information"
	customIcon=""
	showIcon="false"
	showCloseButton="false"
	close="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<link></link> <!-- sap.m.Link -->
</MessageStrip>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MultiComboBox" alias="MultiComboBox,Box">
	<jsTemplate><![CDATA[new sap.m.MultiComboBox({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	maxWidth: "100%", // sap.ui.core.CSSSize
	selectedKeys: [], // string[]
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.ui.core.Item
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	selectedItems: [], // sap.ui.core.Item
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionFinish: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MultiComboBox xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	maxWidth="100%"
	selectedKeys=""
	ariaLabelledBy=""
	selectedItems=""
	change=""
	selectionChange=""
	selectionFinish="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.ui.core.Item -->
</MultiComboBox>
]]></xmlTemplate>
</Template>
<Template name="sap.m.MultiInput" alias="MultiInput,Input">
	<jsTemplate><![CDATA[new sap.m.MultiInput({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	type: sap.m.InputType.Text, // sap.m.InputType
	maxLength: 0, // int
	dateFormat: "YYYY-MM-dd", // string
	showValueHelp: false, // boolean, since 1.16
	showSuggestion: false, // boolean, since 1.16.1
	valueHelpOnly: false, // boolean, since 1.21.0
	filterSuggests: true, // boolean
	maxSuggestionWidth: undefined, // sap.ui.core.CSSSize, since 1.21.1
	startSuggestion: 1, // int, since 1.21.2
	showTableSuggestionValueHelp: true, // boolean, since 1.22.1
	description: undefined, // string
	fieldWidth: "50%", // sap.ui.core.CSSSize
	valueLiveUpdate: false, // boolean, since 1.24
	enableMultiLineMode: false, // boolean, since 1.28
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	suggestionItems: [], // sap.ui.core.Item, since 1.16.1
	suggestionColumns: [], // sap.m.Column, since 1.21.1
	suggestionRows: [], // sap.m.ColumnListItem, since 1.21.1
	tokens: [], // sap.m.Token
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	valueHelpRequest: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	suggest: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.1
	suggestionItemSelected: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	tokenChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<MultiInput xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	type="Text"
	maxLength="0"
	dateFormat="YYYY-MM-dd"
	showValueHelp="false"
	showSuggestion="false"
	valueHelpOnly="false"
	filterSuggests="true"
	maxSuggestionWidth=""
	startSuggestion="1"
	showTableSuggestionValueHelp="true"
	description=""
	fieldWidth="50%"
	valueLiveUpdate="false"
	enableMultiLineMode="false"
	ariaLabelledBy=""
	change=""
	liveChange=""
	valueHelpRequest=""
	suggest=""
	suggestionItemSelected=""
	tokenChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<suggestionItems></suggestionItems> <!-- sap.ui.core.Item, since 1.16.1 -->
		<suggestionColumns></suggestionColumns> <!-- sap.m.Column, since 1.21.1 -->
		<suggestionRows></suggestionRows> <!-- sap.m.ColumnListItem, since 1.21.1 -->
		<tokens></tokens> <!-- sap.m.Token -->
</MultiInput>
]]></xmlTemplate>
</Template>
<Template name="sap.m.NavContainer" alias="NavContainer,Container">
	<jsTemplate><![CDATA[new sap.m.NavContainer({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	autoFocus: true, // boolean, since 1.30.8
	height: "100%", // sap.ui.core.CSSSize
	width: "100%", // sap.ui.core.CSSSize
	visible: true, // boolean
	defaultTransitionName: "slide", // string, since 1.7.1
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	pages: [], // sap.ui.core.Control
	initialPage: undefined, // sap.ui.core.Control
	navigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.7.1
	afterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.7.1
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<NavContainer xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	autoFocus="true"
	height="100%"
	width="100%"
	visible="true"
	defaultTransitionName="slide"
	initialPage=""
	navigate=""
	afterNavigate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<pages></pages> <!-- sap.ui.core.Control -->
</NavContainer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ObjectAttribute" alias="ObjectAttribute,Attribute">
	<jsTemplate><![CDATA[new sap.m.ObjectAttribute({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	text: undefined, // string
	active: undefined, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	customContent: undefined, // sap.ui.core.Control
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ObjectAttribute xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	text=""
	active=""
	textDirection="Inherit"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<customContent></customContent> <!-- sap.ui.core.Control -->
</ObjectAttribute>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ObjectHeader" alias="ObjectHeader,Header">
	<jsTemplate><![CDATA[new sap.m.ObjectHeader({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	number: undefined, // string
	numberUnit: undefined, // string
	intro: undefined, // string
	introActive: undefined, // boolean
	titleActive: undefined, // boolean
	icon: undefined, // sap.ui.core.URI
	iconActive: undefined, // boolean
	iconAlt: undefined, // string
	iconDensityAware: true, // boolean
	markFavorite: false, // boolean, since 1.16.0
	markFlagged: false, // boolean, since 1.16.0
	showMarkers: false, // boolean, since 1.16.0
	showTitleSelector: false, // boolean, since 1.16.0
	numberState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState, since 1.16.0
	condensed: false, // boolean
	backgroundDesign: sap.m.BackgroundDesign.Transparent, // sap.m.BackgroundDesign
	responsive: false, // boolean, since 1.21.1
	fullScreenOptimized: false, // boolean, since 1.28
	titleHref: undefined, // sap.ui.core.URI, since 1.28
	titleTarget: undefined, // string, since 1.28
	introHref: undefined, // sap.ui.core.URI, since 1.28
	introTarget: undefined, // string, since 1.28
	titleTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	introTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	numberTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	titleSelectorTooltip: "Options", // string, since 1.30.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	attributes: [], // sap.m.ObjectAttribute
	firstStatus: undefined, // sap.m.ObjectStatus
	secondStatus: undefined, // sap.m.ObjectStatus
	statuses: [], // sap.ui.core.Control, since 1.16.0
	headerContainer: undefined, // sap.m.ObjectHeaderContainer, since 1.21.1
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	titlePress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	introPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	iconPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	titleSelectorPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.16.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ObjectHeader xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	number=""
	numberUnit=""
	intro=""
	introActive=""
	titleActive=""
	icon=""
	iconActive=""
	iconAlt=""
	iconDensityAware="true"
	markFavorite="false"
	markFlagged="false"
	showMarkers="false"
	showTitleSelector="false"
	numberState="None"
	condensed="false"
	backgroundDesign="Transparent"
	responsive="false"
	fullScreenOptimized="false"
	titleHref=""
	titleTarget=""
	introHref=""
	introTarget=""
	titleTextDirection="Inherit"
	introTextDirection="Inherit"
	numberTextDirection="Inherit"
	titleSelectorTooltip="Options"
	ariaDescribedBy=""
	ariaLabelledBy=""
	titlePress=""
	introPress=""
	iconPress=""
	titleSelectorPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<attributes></attributes> <!-- sap.m.ObjectAttribute -->
		<firstStatus></firstStatus> <!-- sap.m.ObjectStatus -->
		<secondStatus></secondStatus> <!-- sap.m.ObjectStatus -->
		<statuses></statuses> <!-- sap.ui.core.Control, since 1.16.0 -->
		<headerContainer></headerContainer> <!-- sap.m.ObjectHeaderContainer, since 1.21.1 -->
</ObjectHeader>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ObjectIdentifier" alias="ObjectIdentifier,Identifier">
	<jsTemplate><![CDATA[new sap.m.ObjectIdentifier({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	text: undefined, // string
	badgeNotes: undefined, // boolean
	badgePeople: undefined, // boolean
	badgeAttachments: undefined, // boolean
	visible: true, // boolean
	titleActive: false, // boolean, since 1.26
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control
	titlePress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.26
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ObjectIdentifier xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	text=""
	badgeNotes=""
	badgePeople=""
	badgeAttachments=""
	visible="true"
	titleActive="false"
	textDirection="Inherit"
	ariaLabelledBy=""
	titlePress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</ObjectIdentifier>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ObjectListItem" alias="ObjectListItem,Item">
	<jsTemplate><![CDATA[new sap.m.ObjectListItem({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	title: undefined, // string
	number: undefined, // string
	numberUnit: undefined, // string
	intro: undefined, // string
	icon: undefined, // sap.ui.core.URI
	activeIcon: undefined, // sap.ui.core.URI
	iconDensityAware: true, // boolean
	markFavorite: undefined, // boolean, since 1.16.0
	markFlagged: undefined, // boolean, since 1.16.0
	showMarkers: undefined, // boolean, since 1.16.0
	numberState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState, since 1.16.0
	titleTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	introTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	numberTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	markLocked: false, // boolean, since 1.28
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	attributes: [], // sap.m.ObjectAttribute
	firstStatus: undefined, // sap.m.ObjectStatus
	secondStatus: undefined, // sap.m.ObjectStatus
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ObjectListItem xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	title=""
	number=""
	numberUnit=""
	intro=""
	icon=""
	activeIcon=""
	iconDensityAware="true"
	markFavorite=""
	markFlagged=""
	showMarkers=""
	numberState="None"
	titleTextDirection="Inherit"
	introTextDirection="Inherit"
	numberTextDirection="Inherit"
	markLocked="false"
	ariaLabelledBy=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<attributes></attributes> <!-- sap.m.ObjectAttribute -->
		<firstStatus></firstStatus> <!-- sap.m.ObjectStatus -->
		<secondStatus></secondStatus> <!-- sap.m.ObjectStatus -->
</ObjectListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ObjectNumber" alias="ObjectNumber,Number">
	<jsTemplate><![CDATA[new sap.m.ObjectNumber({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	number: undefined, // string
	numberUnit: undefined, // string
	emphasized: true, // boolean
	state: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	unit: undefined, // string, since 1.16.1
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	textAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ObjectNumber xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	number=""
	numberUnit=""
	emphasized="true"
	state="None"
	unit=""
	textDirection="Inherit"
	textAlign="Begin">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</ObjectNumber>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ObjectStatus" alias="ObjectStatus,Status">
	<jsTemplate><![CDATA[new sap.m.ObjectStatus({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	text: undefined, // string
	state: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	icon: undefined, // sap.ui.core.URI
	iconDensityAware: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaDescribedBy: [] // sap.ui.core.Control
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ObjectStatus xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	text=""
	state="None"
	icon=""
	iconDensityAware="true"
	textDirection="Inherit"
	ariaDescribedBy="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</ObjectStatus>
]]></xmlTemplate>
</Template>
<Template name="sap.m.OverflowToolbar" alias="OverflowToolbar,Toolbar">
	<jsTemplate><![CDATA[new sap.m.OverflowToolbar({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	width: undefined, // sap.ui.core.CSSSize
	active: false, // boolean
	enabled: true, // boolean
	height: "", // sap.ui.core.CSSSize
	design: sap.m.ToolbarDesign.Auto, // sap.m.ToolbarDesign, since 1.16.8
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [], // sap.ui.core.Control
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<OverflowToolbar xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	width=""
	active="false"
	enabled="true"
	height=""
	design="Auto"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
</OverflowToolbar>
]]></xmlTemplate>
</Template>
<Template name="sap.m.OverflowToolbarLayoutData" alias="OverflowToolbarLayoutData,Data">
	<jsTemplate><![CDATA[new sap.m.OverflowToolbarLayoutData({
	id: "${id}", // sap.ui.core.ID
	shrinkable: false, // boolean
	minWidth: undefined, // sap.ui.core.CSSSize
	maxWidth: undefined, // sap.ui.core.CSSSize
	moveToOverflow: true, // boolean
	stayInOverflow: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<OverflowToolbarLayoutData xmlns="sap.m"
	id="${id}"
	shrinkable="false"
	minWidth=""
	maxWidth=""
	moveToOverflow="true"
	stayInOverflow="false">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</OverflowToolbarLayoutData>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nColumnsItem" alias="P13nColumnsItem,Item">
	<jsTemplate><![CDATA[new sap.m.P13nColumnsItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	columnKey: undefined, // string, since 1.26.0
	index: undefined, // int, since 1.26.0
	visible: undefined, // boolean, since 1.26.0
	width: undefined, // string, since 1.26.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nColumnsItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	columnKey=""
	index=""
	visible=""
	width="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</P13nColumnsItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nColumnsPanel" alias="P13nColumnsPanel,Panel">
	<jsTemplate><![CDATA[new sap.m.P13nColumnsPanel({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string, since 1.26.0
	titleLarge: undefined, // string, since 1.30.0
	type: undefined, // string, since 1.26.0
	verticalScrolling: true, // boolean, since 1.26.0
	validationExecutor: undefined, // object
	validationListener: undefined, // object
	visibleItemsThreshold: -1, // int, since 1.26.7
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.P13nItem, since 1.26.0
	columnsItems: [], // sap.m.P13nColumnsItem, since 1.26.0
	beforeNavigationTo: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.28.0
	addColumnsItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.26.0
	changeColumnsItems: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.26.7
	setData: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.26.7
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nColumnsPanel xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	titleLarge=""
	type=""
	verticalScrolling="true"
	validationExecutor=""
	validationListener=""
	visibleItemsThreshold="-1"
	beforeNavigationTo=""
	addColumnsItem=""
	changeColumnsItems=""
	setData="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.P13nItem, since 1.26.0 -->
		<columnsItems></columnsItems> <!-- sap.m.P13nColumnsItem, since 1.26.0 -->
</P13nColumnsPanel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nConditionPanel" alias="P13nConditionPanel,Panel">
	<jsTemplate><![CDATA[new sap.m.P13nConditionPanel({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	maxConditions: "-1", // string
	exclude: false, // boolean
	containerQuery: false, // boolean
	autoAddNewRow: false, // boolean
	disableFirstRemoveIcon: false, // boolean
	alwaysShowAddIcon: true, // boolean
	usePrevConditionSetting: true, // boolean
	autoReduceKeyFieldItems: false, // boolean
	layoutMode: undefined, // string
	showLabel: false, // boolean
	displayFormat: undefined, // string
	validationExecutor: undefined, // object
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	dataChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nConditionPanel xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	maxConditions="-1"
	exclude="false"
	containerQuery="false"
	autoAddNewRow="false"
	disableFirstRemoveIcon="false"
	alwaysShowAddIcon="true"
	usePrevConditionSetting="true"
	autoReduceKeyFieldItems="false"
	layoutMode=""
	showLabel="false"
	displayFormat=""
	validationExecutor=""
	dataChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</P13nConditionPanel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nDialog" alias="P13nDialog,Dialog">
	<jsTemplate><![CDATA[new sap.m.P13nDialog({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	icon: undefined, // sap.ui.core.URI
	title: undefined, // string
	showHeader: true, // boolean, since 1.15.1
	type: sap.m.DialogType.Standard, // sap.m.DialogType
	state: sap.ui.core.ValueState.None, // sap.ui.core.ValueState, since 1.11.2
	stretchOnPhone: false, // boolean, since 1.11.2
	stretch: false, // boolean, since 1.13.1
	contentWidth: undefined, // sap.ui.core.CSSSize, since 1.12.1
	contentHeight: undefined, // sap.ui.core.CSSSize, since 1.12.1
	horizontalScrolling: true, // boolean, since 1.15.1
	verticalScrolling: true, // boolean, since 1.15.1
	resizable: false, // boolean, since 1.30
	draggable: false, // boolean, since 1.30
	initialVisiblePanelType: undefined, // string, since 1.26.0
	showReset: false, // boolean, since 1.26.0
	validationExecutor: undefined, // object
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [], // sap.ui.core.Control
	subHeader: undefined, // sap.m.IBar, since 1.12.2
	customHeader: undefined, // sap.m.IBar, since 1.15.1
	beginButton: undefined, // sap.m.Button, since 1.15.1
	endButton: undefined, // sap.m.Button, since 1.15.1
	buttons: [], // sap.m.Button, since 1.21.1
	panels: [], // sap.m.P13nPanel, since 1.26.0
	leftButton: undefined, // sap.m.Button
	rightButton: undefined, // sap.m.Button
	initialFocus: undefined, // sap.ui.core.Control, since 1.15.0
	ariaDescribedBy: [], // sap.ui.core.Control
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	ok: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.26.0
	cancel: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.26.0
	reset: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.26.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nDialog xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	icon=""
	title=""
	showHeader="true"
	type="Standard"
	state="None"
	stretchOnPhone="false"
	stretch="false"
	contentWidth=""
	contentHeight=""
	horizontalScrolling="true"
	verticalScrolling="true"
	resizable="false"
	draggable="false"
	initialVisiblePanelType=""
	showReset="false"
	validationExecutor=""
	leftButton=""
	rightButton=""
	initialFocus=""
	ariaDescribedBy=""
	beforeOpen=""
	afterOpen=""
	beforeClose=""
	afterClose=""
	ok=""
	cancel=""
	reset="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
		<subHeader></subHeader> <!-- sap.m.IBar, since 1.12.2 -->
		<customHeader></customHeader> <!-- sap.m.IBar, since 1.15.1 -->
		<beginButton></beginButton> <!-- sap.m.Button, since 1.15.1 -->
		<endButton></endButton> <!-- sap.m.Button, since 1.15.1 -->
		<buttons></buttons> <!-- sap.m.Button, since 1.21.1 -->
		<panels></panels> <!-- sap.m.P13nPanel, since 1.26.0 -->
</P13nDialog>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nFilterItem" alias="P13nFilterItem,Item">
	<jsTemplate><![CDATA[new sap.m.P13nFilterItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	operation: undefined, // string, since 1.26.0
	value1: undefined, // string, since 1.26.0
	value2: undefined, // string, since 1.26.0
	columnKey: undefined, // string, since 1.26.0
	exclude: false, // boolean, since 1.26.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nFilterItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	operation=""
	value1=""
	value2=""
	columnKey=""
	exclude="false">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</P13nFilterItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nFilterPanel" alias="P13nFilterPanel,Panel">
	<jsTemplate><![CDATA[new sap.m.P13nFilterPanel({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string, since 1.26.0
	titleLarge: undefined, // string, since 1.30.0
	type: undefined, // string, since 1.26.0
	verticalScrolling: true, // boolean, since 1.26.0
	validationExecutor: undefined, // object
	validationListener: undefined, // object
	maxIncludes: "-1", // string, since 1.26
	maxExcludes: "-1", // string, since 1.26
	containerQuery: false, // boolean, since 1.26
	layoutMode: undefined, // string, since 1.26
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.P13nItem, since 1.26.0
	filterItems: [], // sap.m.P13nFilterItem, since 1.26
	beforeNavigationTo: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.28.0
	addFilterItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.26
	removeFilterItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.26
	updateFilterItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.26
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nFilterPanel xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	titleLarge=""
	type=""
	verticalScrolling="true"
	validationExecutor=""
	validationListener=""
	maxIncludes="-1"
	maxExcludes="-1"
	containerQuery="false"
	layoutMode=""
	beforeNavigationTo=""
	addFilterItem=""
	removeFilterItem=""
	updateFilterItem="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.P13nItem, since 1.26.0 -->
		<filterItems></filterItems> <!-- sap.m.P13nFilterItem, since 1.26 -->
</P13nFilterPanel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nGroupItem" alias="P13nGroupItem,Item">
	<jsTemplate><![CDATA[new sap.m.P13nGroupItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	operation: undefined, // string, since 1.28.0
	columnKey: undefined, // string, since 1.28.0
	showIfGrouped: false, // boolean, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nGroupItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	operation=""
	columnKey=""
	showIfGrouped="false">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</P13nGroupItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nGroupPanel" alias="P13nGroupPanel,Panel">
	<jsTemplate><![CDATA[new sap.m.P13nGroupPanel({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string, since 1.26.0
	titleLarge: undefined, // string, since 1.30.0
	type: undefined, // string, since 1.26.0
	verticalScrolling: true, // boolean, since 1.26.0
	validationExecutor: undefined, // object
	validationListener: undefined, // object
	maxGroups: "-1", // string, since 1.26
	containerQuery: false, // boolean, since 1.26
	layoutMode: undefined, // string, since 1.26
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.P13nItem, since 1.26.0
	groupItems: [], // sap.m.P13nGroupItem, since 1.26
	beforeNavigationTo: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.28.0
	addGroupItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.26
	removeGroupItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.26
	updateGroupItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.26
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nGroupPanel xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	titleLarge=""
	type=""
	verticalScrolling="true"
	validationExecutor=""
	validationListener=""
	maxGroups="-1"
	containerQuery="false"
	layoutMode=""
	beforeNavigationTo=""
	addGroupItem=""
	removeGroupItem=""
	updateGroupItem="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.P13nItem, since 1.26.0 -->
		<groupItems></groupItems> <!-- sap.m.P13nGroupItem, since 1.26 -->
</P13nGroupPanel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nItem" alias="P13nItem,Item">
	<jsTemplate><![CDATA[new sap.m.P13nItem({
	id: "${id}", // sap.ui.core.ID
	columnKey: undefined, // string, since 1.26.0
	text: "", // string, since 1.26.0
	visible: undefined, // boolean, since 1.26.0
	type: "text", // string, since 1.26.0
	precision: undefined, // string, since 1.26.0
	scale: undefined, // string, since 1.26.0
	maxLength: undefined, // string, since 1.26.0
	width: undefined, // string, since 1.26.0
	isDefault: false, // boolean, since 1.26.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nItem xmlns="sap.m"
	id="${id}"
	columnKey=""
	text=""
	visible=""
	type="text"
	precision=""
	scale=""
	maxLength=""
	width=""
	isDefault="false">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</P13nItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nPanel" alias="P13nPanel,Panel">
	<jsTemplate><![CDATA[new sap.m.P13nPanel({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string, since 1.26.0
	titleLarge: undefined, // string, since 1.30.0
	type: undefined, // string, since 1.26.0
	verticalScrolling: true, // boolean, since 1.26.0
	validationExecutor: undefined, // object
	validationListener: undefined, // object
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.P13nItem, since 1.26.0
	beforeNavigationTo: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.28.0
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nPanel xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	titleLarge=""
	type=""
	verticalScrolling="true"
	validationExecutor=""
	validationListener=""
	beforeNavigationTo="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.P13nItem, since 1.26.0 -->
</P13nPanel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nSortItem" alias="P13nSortItem,Item">
	<jsTemplate><![CDATA[new sap.m.P13nSortItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	operation: undefined, // string, since 1.26.0
	columnKey: undefined, // string, since 1.26.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nSortItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	operation=""
	columnKey="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</P13nSortItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.P13nSortPanel" alias="P13nSortPanel,Panel">
	<jsTemplate><![CDATA[new sap.m.P13nSortPanel({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string, since 1.26.0
	titleLarge: undefined, // string, since 1.30.0
	type: undefined, // string, since 1.26.0
	verticalScrolling: true, // boolean, since 1.26.0
	validationExecutor: undefined, // object
	validationListener: undefined, // object
	containerQuery: false, // boolean, since 1.26
	layoutMode: undefined, // string, since 1.26
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.P13nItem, since 1.26.0
	sortItems: [], // sap.m.P13nSortItem, since 1.26
	beforeNavigationTo: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.28.0
	addSortItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.26
	removeSortItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.26
	updateSortItem: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.26
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<P13nSortPanel xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	titleLarge=""
	type=""
	verticalScrolling="true"
	validationExecutor=""
	validationListener=""
	containerQuery="false"
	layoutMode=""
	beforeNavigationTo=""
	addSortItem=""
	removeSortItem=""
	updateSortItem="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.P13nItem, since 1.26.0 -->
		<sortItems></sortItems> <!-- sap.m.P13nSortItem, since 1.26 -->
</P13nSortPanel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Page" alias="Page">
	<jsTemplate><![CDATA[new sap.m.Page({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	titleLevel: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	showNavButton: false, // boolean
	showHeader: true, // boolean
	showSubHeader: true, // boolean, since 1.28
	navButtonText: undefined, // string
	enableScrolling: true, // boolean
	icon: undefined, // sap.ui.core.URI
	backgroundDesign: sap.m.PageBackgroundDesign.Standard, // sap.m.PageBackgroundDesign
	navButtonType: sap.m.ButtonType.Back, // sap.m.ButtonType, since 1.12
	showFooter: true, // boolean, since 1.13.1
	contentOnlyBusy: false, // boolean, since 1.29.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [], // sap.ui.core.Control
	customHeader: undefined, // sap.m.IBar
	footer: undefined, // sap.m.IBar
	subHeader: undefined, // sap.m.IBar
	headerContent: [], // sap.ui.core.Control
	navButtonTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.12.2
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Page xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	titleLevel="Auto"
	showNavButton="false"
	showHeader="true"
	showSubHeader="true"
	navButtonText=""
	enableScrolling="true"
	icon=""
	backgroundDesign="Standard"
	navButtonType="Back"
	showFooter="true"
	contentOnlyBusy="false"
	navButtonTap=""
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeader></customHeader> <!-- sap.m.IBar -->
		<footer></footer> <!-- sap.m.IBar -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<headerContent></headerContent> <!-- sap.ui.core.Control -->
</Page>
]]></xmlTemplate>
</Template>
<Template name="sap.m.PagingButton" alias="PagingButton,Button">
	<jsTemplate><![CDATA[new sap.m.PagingButton({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	count: 1, // int
	position: 1, // int
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	positionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<PagingButton xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	count="1"
	position="1"
	positionChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</PagingButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Panel" alias="Panel">
	<jsTemplate><![CDATA[new sap.m.Panel({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	headerText: undefined, // string
	width: "100%", // sap.ui.core.CSSSize
	height: "auto", // sap.ui.core.CSSSize
	expandable: false, // boolean, since 1.22
	expanded: false, // boolean, since 1.22
	expandAnimation: true, // boolean, since 1.26
	backgroundDesign: sap.m.BackgroundDesign.Translucent, // sap.m.BackgroundDesign, since 1.30
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [], // sap.ui.core.Control
	headerToolbar: undefined, // sap.m.Toolbar, since 1.16
	infoToolbar: undefined, // sap.m.Toolbar, since 1.16
	expand: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.22
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Panel xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	headerText=""
	width="100%"
	height="auto"
	expandable="false"
	expanded="false"
	expandAnimation="true"
	backgroundDesign="Translucent"
	expand="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
		<headerToolbar></headerToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.16 -->
</Panel>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Popover" alias="Popover">
	<jsTemplate><![CDATA[new sap.m.Popover({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	placement: sap.m.PlacementType.Right, // sap.m.PlacementType
	showHeader: true, // boolean
	title: undefined, // string
	modal: false, // boolean
	offsetX: 0, // int
	offsetY: 0, // int
	contentWidth: undefined, // sap.ui.core.CSSSize, since 1.9.0
	contentHeight: undefined, // sap.ui.core.CSSSize, since 1.9.0
	enableScrolling: true, // boolean
	verticalScrolling: true, // boolean, since 1.15.0
	horizontalScrolling: true, // boolean, since 1.15.0
	bounce: undefined, // boolean, since 1.16.5
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [], // sap.ui.core.Control
	customHeader: undefined, // sap.ui.core.Control
	subHeader: undefined, // sap.ui.core.Control, since 1.15.1
	footer: undefined, // sap.ui.core.Control
	beginButton: undefined, // sap.ui.core.Control, since 1.15.1
	endButton: undefined, // sap.ui.core.Control, since 1.15.1
	leftButton: undefined, // sap.m.Button
	rightButton: undefined, // sap.m.Button
	initialFocus: undefined, // sap.ui.core.Control, since 1.15.0
	ariaDescribedBy: [], // sap.ui.core.Control
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Popover xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	placement="Right"
	showHeader="true"
	title=""
	modal="false"
	offsetX="0"
	offsetY="0"
	contentWidth=""
	contentHeight=""
	enableScrolling="true"
	verticalScrolling="true"
	horizontalScrolling="true"
	bounce=""
	leftButton=""
	rightButton=""
	initialFocus=""
	ariaDescribedBy=""
	afterOpen=""
	afterClose=""
	beforeOpen=""
	beforeClose="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeader></customHeader> <!-- sap.ui.core.Control -->
		<subHeader></subHeader> <!-- sap.ui.core.Control, since 1.15.1 -->
		<footer></footer> <!-- sap.ui.core.Control -->
		<beginButton></beginButton> <!-- sap.ui.core.Control, since 1.15.1 -->
		<endButton></endButton> <!-- sap.ui.core.Control, since 1.15.1 -->
</Popover>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ProgressIndicator" alias="ProgressIndicator,Indicator">
	<jsTemplate><![CDATA[new sap.m.ProgressIndicator({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	enabled: true, // boolean
	state: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	displayValue: undefined, // string
	percentValue: 0, // float
	showValue: true, // boolean
	width: "100%", // sap.ui.core.CSSSize
	height: undefined, // sap.ui.core.CSSSize, since 1.15.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ProgressIndicator xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	enabled="true"
	state="None"
	displayValue=""
	percentValue="0"
	showValue="true"
	width="100%"
	height=""
	textDirection="Inherit">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</ProgressIndicator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.PullToRefresh" alias="PullToRefresh,Refresh">
	<jsTemplate><![CDATA[new sap.m.PullToRefresh({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	description: undefined, // string
	showIcon: false, // boolean
	customIcon: undefined, // sap.ui.core.URI
	iconDensityAware: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	refresh: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<PullToRefresh xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	description=""
	showIcon="false"
	customIcon=""
	iconDensityAware="true"
	refresh="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</PullToRefresh>
]]></xmlTemplate>
</Template>
<Template name="sap.m.QuickView" alias="QuickView,View">
	<jsTemplate><![CDATA[new sap.m.QuickView({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	placement: sap.m.PlacementType.Right, // sap.m.PlacementType
	width: "320px", // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	pages: [], // sap.m.QuickViewPage
	navigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<QuickView xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	placement="Right"
	width="320px"
	navigate=""
	afterNavigate=""
	afterOpen=""
	afterClose=""
	beforeOpen=""
	beforeClose="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<pages></pages> <!-- sap.m.QuickViewPage -->
</QuickView>
]]></xmlTemplate>
</Template>
<Template name="sap.m.QuickViewBase" alias="QuickViewBase,Base">
	<jsTemplate><![CDATA[new sap.m.QuickViewBase({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	pages: [], // sap.m.QuickViewPage
	navigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<QuickViewBase xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	navigate=""
	afterNavigate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<pages></pages> <!-- sap.m.QuickViewPage -->
</QuickViewBase>
]]></xmlTemplate>
</Template>
<Template name="sap.m.QuickViewCard" alias="QuickViewCard,Card">
	<jsTemplate><![CDATA[new sap.m.QuickViewCard({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	showVerticalScrollBar: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	pages: [], // sap.m.QuickViewPage
	navigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<QuickViewCard xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	showVerticalScrollBar="true"
	navigate=""
	afterNavigate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<pages></pages> <!-- sap.m.QuickViewPage -->
</QuickViewCard>
]]></xmlTemplate>
</Template>
<Template name="sap.m.QuickViewGroup" alias="QuickViewGroup,Group">
	<jsTemplate><![CDATA[new sap.m.QuickViewGroup({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	heading: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	elements: [] // sap.m.QuickViewGroupElement
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<QuickViewGroup xmlns="sap.m"
	id="${id}"
	visible="true"
	heading="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<elements></elements> <!-- sap.m.QuickViewGroupElement -->
</QuickViewGroup>
]]></xmlTemplate>
</Template>
<Template name="sap.m.QuickViewGroupElement" alias="QuickViewGroupElement,Element">
	<jsTemplate><![CDATA[new sap.m.QuickViewGroupElement({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	label: "", // string
	value: "", // string
	url: "", // string
	target: "_blank", // string
	type: sap.m.QuickViewGroupElementType.text, // sap.m.QuickViewGroupElementType
	pageLinkId: "", // string
	emailSubject: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<QuickViewGroupElement xmlns="sap.m"
	id="${id}"
	visible="true"
	label=""
	value=""
	url=""
	target="_blank"
	type="text"
	pageLinkId=""
	emailSubject="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</QuickViewGroupElement>
]]></xmlTemplate>
</Template>
<Template name="sap.m.QuickViewPage" alias="QuickViewPage,Page">
	<jsTemplate><![CDATA[new sap.m.QuickViewPage({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	pageId: "", // string
	header: "", // string
	title: "", // string
	titleUrl: "", // string
	crossAppNavCallback: undefined, // object
	description: "", // string
	icon: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	groups: [] // sap.m.QuickViewGroup
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<QuickViewPage xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	pageId=""
	header=""
	title=""
	titleUrl=""
	crossAppNavCallback=""
	description=""
	icon="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<groups></groups> <!-- sap.m.QuickViewGroup -->
</QuickViewPage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.RadioButton" alias="RadioButton,Button">
	<jsTemplate><![CDATA[new sap.m.RadioButton({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	enabled: true, // boolean
	selected: false, // boolean
	groupName: "sapMRbDefaultGroup", // string
	text: undefined, // string
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	width: "", // sap.ui.core.CSSSize
	activeHandling: true, // boolean
	editable: true, // boolean, since 1.25
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState, since 1.25
	textAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign, since 1.28
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<RadioButton xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	enabled="true"
	selected="false"
	groupName="sapMRbDefaultGroup"
	text=""
	textDirection="Inherit"
	width=""
	activeHandling="true"
	editable="true"
	valueState="None"
	textAlign="Begin"
	ariaDescribedBy=""
	ariaLabelledBy=""
	select="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</RadioButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.RadioButtonGroup" alias="RadioButtonGroup,Group">
	<jsTemplate><![CDATA[new sap.m.RadioButtonGroup({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	width: undefined, // sap.ui.core.CSSSize
	columns: 1, // int
	editable: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	selectedIndex: 0, // int
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	buttons: [], // sap.m.RadioButton
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<RadioButtonGroup xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	width=""
	columns="1"
	editable="true"
	valueState="None"
	selectedIndex="0"
	enabled="true"
	textDirection="Inherit"
	ariaDescribedBy=""
	ariaLabelledBy=""
	select="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<buttons></buttons> <!-- sap.m.RadioButton -->
</RadioButtonGroup>
]]></xmlTemplate>
</Template>
<Template name="sap.m.RatingIndicator" alias="RatingIndicator,Indicator">
	<jsTemplate><![CDATA[new sap.m.RatingIndicator({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	enabled: true, // boolean
	maxValue: 5, // int
	value: 0, // float
	iconSize: undefined, // sap.ui.core.CSSSize
	iconSelected: undefined, // sap.ui.core.URI
	iconUnselected: undefined, // sap.ui.core.URI
	iconHovered: undefined, // sap.ui.core.URI
	visualMode: sap.m.RatingIndicatorVisualMode.Half, // sap.m.RatingIndicatorVisualMode
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<RatingIndicator xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	enabled="true"
	maxValue="5"
	value="0"
	iconSize=""
	iconSelected=""
	iconUnselected=""
	iconHovered=""
	visualMode="Half"
	ariaDescribedBy=""
	ariaLabelledBy=""
	change=""
	liveChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</RatingIndicator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ResponsivePopover" alias="ResponsivePopover,Popover">
	<jsTemplate><![CDATA[new sap.m.ResponsivePopover({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	placement: sap.m.PlacementType.Right, // sap.m.PlacementType
	showHeader: true, // boolean
	title: undefined, // string
	icon: undefined, // sap.ui.core.URI
	modal: undefined, // boolean
	offsetX: undefined, // int
	offsetY: undefined, // int
	contentWidth: undefined, // sap.ui.core.CSSSize
	contentHeight: undefined, // sap.ui.core.CSSSize
	horizontalScrolling: true, // boolean
	verticalScrolling: true, // boolean
	showCloseButton: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [], // sap.ui.core.Control
	customHeader: undefined, // sap.m.IBar
	subHeader: undefined, // sap.m.IBar
	beginButton: undefined, // sap.m.Button
	endButton: undefined, // sap.m.Button
	initialFocus: undefined, // sap.ui.core.Control
	ariaDescribedBy: [], // sap.ui.core.Control
	beforeOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ResponsivePopover xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	placement="Right"
	showHeader="true"
	title=""
	icon=""
	modal=""
	offsetX=""
	offsetY=""
	contentWidth=""
	contentHeight=""
	horizontalScrolling="true"
	verticalScrolling="true"
	showCloseButton="true"
	initialFocus=""
	ariaDescribedBy=""
	beforeOpen=""
	afterOpen=""
	beforeClose=""
	afterClose="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeader></customHeader> <!-- sap.m.IBar -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<beginButton></beginButton> <!-- sap.m.Button -->
		<endButton></endButton> <!-- sap.m.Button -->
</ResponsivePopover>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ScrollContainer" alias="ScrollContainer,Container">
	<jsTemplate><![CDATA[new sap.m.ScrollContainer({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	width: "auto", // sap.ui.core.CSSSize
	height: "auto", // sap.ui.core.CSSSize
	horizontal: true, // boolean
	vertical: false, // boolean
	focusable: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [] // sap.ui.core.Control
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ScrollContainer xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	width="auto"
	height="auto"
	horizontal="true"
	vertical="false"
	focusable="false">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
</ScrollContainer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SearchField" alias="SearchField,Field">
	<jsTemplate><![CDATA[new sap.m.SearchField({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	visible: true, // boolean
	maxLength: 0, // int
	placeholder: undefined, // string
	showMagnifier: true, // boolean
	showRefreshButton: false, // boolean, since 1.16
	refreshButtonTooltip: undefined, // string, since 1.16
	showSearchButton: true, // boolean, since 1.23
	selectOnFocus: true, // boolean, since 1.20
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	search: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.9.1
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SearchField xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	value=""
	width=""
	enabled="true"
	visible="true"
	maxLength="0"
	placeholder=""
	showMagnifier="true"
	showRefreshButton="false"
	refreshButtonTooltip=""
	showSearchButton="true"
	selectOnFocus="true"
	ariaDescribedBy=""
	ariaLabelledBy=""
	search=""
	liveChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</SearchField>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SegmentedButton" alias="SegmentedButton,Button">
	<jsTemplate><![CDATA[new sap.m.SegmentedButton({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	selectedKey: "", // string, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	buttons: [], // sap.m.Button
	items: [], // sap.m.SegmentedButtonItem, since 1.28
	selectedButton: undefined, // sap.m.Button
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SegmentedButton xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	width=""
	enabled="true"
	selectedKey=""
	selectedButton=""
	ariaDescribedBy=""
	ariaLabelledBy=""
	select="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<buttons></buttons> <!-- sap.m.Button -->
		<items></items> <!-- sap.m.SegmentedButtonItem, since 1.28 -->
</SegmentedButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SegmentedButtonItem" alias="SegmentedButtonItem,Item">
	<jsTemplate><![CDATA[new sap.m.SegmentedButtonItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	icon: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SegmentedButtonItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	icon=""
	width=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</SegmentedButtonItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Select" alias="Select">
	<jsTemplate><![CDATA[new sap.m.Select({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	name: "", // string
	enabled: true, // boolean
	width: "auto", // sap.ui.core.CSSSize
	maxWidth: "100%", // sap.ui.core.CSSSize
	selectedKey: "", // string, since 1.11
	selectedItemId: "", // string, since 1.12
	icon: "", // sap.ui.core.URI, since 1.16
	type: sap.m.SelectType.Default, // sap.m.SelectType, since 1.16
	autoAdjustWidth: false, // boolean, since 1.16
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.28
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Select xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	name=""
	enabled="true"
	width="auto"
	maxWidth="100%"
	selectedKey=""
	selectedItemId=""
	icon=""
	type="Default"
	autoAdjustWidth="false"
	textAlign="Initial"
	textDirection="Inherit"
	selectedItem=""
	ariaLabelledBy=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.ui.core.Item -->
</Select>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SelectDialog" alias="SelectDialog,Dialog">
	<jsTemplate><![CDATA[new sap.m.SelectDialog({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	noDataText: undefined, // string
	multiSelect: false, // boolean
	growingThreshold: undefined, // int
	contentWidth: undefined, // sap.ui.core.CSSSize, since 1.18
	rememberSelections: false, // boolean, since 1.18
	contentHeight: undefined, // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.ListItemBase
	confirm: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	search: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	cancel: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SelectDialog xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	noDataText=""
	multiSelect="false"
	growingThreshold=""
	contentWidth=""
	rememberSelections="false"
	contentHeight=""
	confirm=""
	search=""
	liveChange=""
	cancel="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.ListItemBase -->
</SelectDialog>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SelectList" alias="SelectList,List">
	<jsTemplate><![CDATA[new sap.m.SelectList({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	enabled: true, // boolean
	width: "auto", // sap.ui.core.CSSSize
	maxWidth: "100%", // sap.ui.core.CSSSize
	selectedKey: "", // string
	selectedItemId: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SelectList xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	enabled="true"
	width="auto"
	maxWidth="100%"
	selectedKey=""
	selectedItemId=""
	selectedItem=""
	ariaLabelledBy=""
	selectionChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.ui.core.Item -->
</SelectList>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Shell" alias="Shell">
	<jsTemplate><![CDATA[new sap.m.Shell({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	logo: undefined, // sap.ui.core.URI
	showLogout: true, // boolean
	headerRightText: undefined, // string
	appWidthLimited: true, // boolean
	backgroundColor: undefined, // sap.ui.core.CSSColor, since 1.11.2
	backgroundImage: undefined, // sap.ui.core.URI, since 1.11.2
	backgroundRepeat: false, // boolean, since 1.11.2
	backgroundOpacity: 1, // float, since 1.11.2
	homeIcon: undefined, // object
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	app: undefined, // sap.ui.core.Control
	logout: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Shell xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	logo=""
	showLogout="true"
	headerRightText=""
	appWidthLimited="true"
	backgroundColor=""
	backgroundImage=""
	backgroundRepeat="false"
	backgroundOpacity="1"
	homeIcon=""
	logout="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<app></app> <!-- sap.ui.core.Control -->
</Shell>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Slider" alias="Slider">
	<jsTemplate><![CDATA[new sap.m.Slider({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	width: "100%", // sap.ui.core.CSSSize
	enabled: true, // boolean
	name: "", // string
	min: 0, // float
	max: 100, // float
	step: 1, // float
	progress: true, // boolean
	value: 0, // float
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Slider xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	width="100%"
	enabled="true"
	name=""
	min="0"
	max="100"
	step="1"
	progress="true"
	value="0"
	ariaLabelledBy=""
	change=""
	liveChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</Slider>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SplitApp" alias="SplitApp,App">
	<jsTemplate><![CDATA[new sap.m.SplitApp({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	defaultTransitionNameDetail: "slide", // string
	defaultTransitionNameMaster: "slide", // string
	mode: sap.m.SplitAppMode.ShowHideMode, // sap.m.SplitAppMode
	masterButtonText: undefined, // string
	backgroundColor: undefined, // string, since 1.11.2
	backgroundImage: undefined, // sap.ui.core.URI, since 1.11.2
	backgroundRepeat: false, // boolean, since 1.11.2
	backgroundOpacity: 1, // float, since 1.11.2
	homeIcon: undefined, // any
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	masterPages: [], // sap.ui.core.Control
	detailPages: [], // sap.ui.core.Control
	initialDetail: undefined, // sap.ui.core.Control
	initialMaster: undefined, // sap.ui.core.Control
	masterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterMasterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	masterButton: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeMasterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterMasterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeMasterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterMasterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterDetailNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	orientationChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SplitApp xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	defaultTransitionNameDetail="slide"
	defaultTransitionNameMaster="slide"
	mode="ShowHideMode"
	masterButtonText=""
	backgroundColor=""
	backgroundImage=""
	backgroundRepeat="false"
	backgroundOpacity="1"
	homeIcon=""
	initialDetail=""
	initialMaster=""
	masterNavigate=""
	afterMasterNavigate=""
	masterButton=""
	beforeMasterOpen=""
	afterMasterOpen=""
	beforeMasterClose=""
	afterMasterClose=""
	detailNavigate=""
	afterDetailNavigate=""
	orientationChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<masterPages></masterPages> <!-- sap.ui.core.Control -->
		<detailPages></detailPages> <!-- sap.ui.core.Control -->
</SplitApp>
]]></xmlTemplate>
</Template>
<Template name="sap.m.SplitContainer" alias="SplitContainer,Container">
	<jsTemplate><![CDATA[new sap.m.SplitContainer({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	defaultTransitionNameDetail: "slide", // string
	defaultTransitionNameMaster: "slide", // string
	mode: sap.m.SplitAppMode.ShowHideMode, // sap.m.SplitAppMode
	masterButtonText: undefined, // string
	backgroundColor: undefined, // string, since 1.11.2
	backgroundImage: undefined, // sap.ui.core.URI, since 1.11.2
	backgroundRepeat: false, // boolean, since 1.11.2
	backgroundOpacity: 1, // float, since 1.11.2
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	masterPages: [], // sap.ui.core.Control
	detailPages: [], // sap.ui.core.Control
	initialDetail: undefined, // sap.ui.core.Control
	initialMaster: undefined, // sap.ui.core.Control
	masterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterMasterNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	masterButton: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeMasterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterMasterOpen: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeMasterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterMasterClose: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	afterDetailNavigate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<SplitContainer xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	defaultTransitionNameDetail="slide"
	defaultTransitionNameMaster="slide"
	mode="ShowHideMode"
	masterButtonText=""
	backgroundColor=""
	backgroundImage=""
	backgroundRepeat="false"
	backgroundOpacity="1"
	initialDetail=""
	initialMaster=""
	masterNavigate=""
	afterMasterNavigate=""
	masterButton=""
	beforeMasterOpen=""
	afterMasterOpen=""
	beforeMasterClose=""
	afterMasterClose=""
	detailNavigate=""
	afterDetailNavigate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<masterPages></masterPages> <!-- sap.ui.core.Control -->
		<detailPages></detailPages> <!-- sap.ui.core.Control -->
</SplitContainer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.StandardListItem" alias="StandardListItem,Item">
	<jsTemplate><![CDATA[new sap.m.StandardListItem({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	type: sap.m.ListType.Inactive, // sap.m.ListType
	visible: true, // boolean
	unread: false, // boolean
	selected: false, // boolean
	counter: undefined, // int
	title: undefined, // string
	description: undefined, // string
	icon: undefined, // sap.ui.core.URI
	iconInset: true, // boolean
	iconDensityAware: true, // boolean
	activeIcon: undefined, // sap.ui.core.URI
	info: undefined, // string
	infoState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	adaptTitleSize: true, // boolean, since 1.16.3
	titleTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	infoTextDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailTap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	detailPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<StandardListItem xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	type="Inactive"
	visible="true"
	unread="false"
	selected="false"
	counter=""
	title=""
	description=""
	icon=""
	iconInset="true"
	iconDensityAware="true"
	activeIcon=""
	info=""
	infoState="None"
	adaptTitleSize="true"
	titleTextDirection="Inherit"
	infoTextDirection="Inherit"
	ariaLabelledBy=""
	tap=""
	detailTap=""
	press=""
	detailPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</StandardListItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.StandardTile" alias="StandardTile,Tile">
	<jsTemplate><![CDATA[new sap.m.StandardTile({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	removable: true, // boolean
	title: undefined, // string
	info: undefined, // string
	icon: undefined, // sap.ui.core.URI
	activeIcon: undefined, // sap.ui.core.URI
	number: undefined, // string
	numberUnit: undefined, // string
	infoState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	type: sap.m.StandardTileType.None, // sap.m.StandardTileType
	iconDensityAware: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaDescribedBy: [], // sap.ui.core.Control
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<StandardTile xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	removable="true"
	title=""
	info=""
	icon=""
	activeIcon=""
	number=""
	numberUnit=""
	infoState="None"
	type="None"
	iconDensityAware="true"
	ariaDescribedBy=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</StandardTile>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Switch" alias="Switch">
	<jsTemplate><![CDATA[new sap.m.Switch({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	state: false, // boolean
	customTextOn: "", // string
	customTextOff: "", // string
	enabled: true, // boolean
	name: "", // string
	type: sap.m.SwitchType.Default, // sap.m.SwitchType
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Switch xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	state="false"
	customTextOn=""
	customTextOff=""
	enabled="true"
	name=""
	type="Default"
	ariaLabelledBy=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</Switch>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Table" alias="Table">
	<jsTemplate><![CDATA[new sap.m.Table({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	inset: false, // boolean
	headerText: undefined, // string
	headerDesign: sap.m.ListHeaderDesign.Standard, // sap.m.ListHeaderDesign, since 1.14
	footerText: undefined, // string
	mode: sap.m.ListMode.None, // sap.m.ListMode
	width: "100%", // sap.ui.core.CSSSize
	includeItemInSelection: false, // boolean
	showUnread: false, // boolean
	noDataText: undefined, // string
	showNoData: true, // boolean
	enableBusyIndicator: true, // boolean, since 1.20.2
	modeAnimationOn: true, // boolean
	showSeparators: sap.m.ListSeparators.All, // sap.m.ListSeparators
	swipeDirection: sap.m.SwipeDirection.Both, // sap.m.SwipeDirection
	growing: false, // boolean, since 1.16
	growingThreshold: 20, // int, since 1.16
	growingTriggerText: undefined, // string, since 1.16
	growingScrollToLoad: false, // boolean, since 1.16
	rememberSelections: true, // boolean, since 1.16.6
	backgroundDesign: sap.m.BackgroundDesign.Translucent, // sap.m.BackgroundDesign
	fixedLayout: true, // boolean, since 1.22
	showOverlay: false, // boolean, since 1.22.1
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.ListItemBase
	swipeContent: undefined, // sap.ui.core.Control
	headerToolbar: undefined, // sap.m.Toolbar, since 1.16
	infoToolbar: undefined, // sap.m.Toolbar, since 1.16
	columns: [], // sap.m.Column
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.28.0
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	selectionChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	"delete": [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	swipe: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	growingStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	growingFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16
	updateStarted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	updateFinished: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this], // since 1.16.3
	itemPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this] // since 1.20
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Table xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	inset="false"
	headerText=""
	headerDesign="Standard"
	footerText=""
	mode="None"
	width="100%"
	includeItemInSelection="false"
	showUnread="false"
	noDataText=""
	showNoData="true"
	enableBusyIndicator="true"
	modeAnimationOn="true"
	showSeparators="All"
	swipeDirection="Both"
	growing="false"
	growingThreshold="20"
	growingTriggerText=""
	growingScrollToLoad="false"
	rememberSelections="true"
	backgroundDesign="Translucent"
	fixedLayout="true"
	showOverlay="false"
	ariaLabelledBy=""
	select=""
	selectionChange=""
	"delete"=""
	swipe=""
	growingStarted=""
	growingFinished=""
	updateStarted=""
	updateFinished=""
	itemPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.ListItemBase -->
		<swipeContent></swipeContent> <!-- sap.ui.core.Control -->
		<headerToolbar></headerToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<infoToolbar></infoToolbar> <!-- sap.m.Toolbar, since 1.16 -->
		<columns></columns> <!-- sap.m.Column -->
</Table>
]]></xmlTemplate>
</Template>
<Template name="sap.m.TableSelectDialog" alias="TableSelectDialog,Dialog">
	<jsTemplate><![CDATA[new sap.m.TableSelectDialog({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	noDataText: undefined, // string
	multiSelect: false, // boolean
	growingThreshold: undefined, // int
	contentWidth: undefined, // sap.ui.core.CSSSize, since 1.18
	rememberSelections: false, // boolean, since 1.18
	contentHeight: undefined, // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.ColumnListItem
	columns: [], // sap.m.Column
	confirm: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	search: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	cancel: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<TableSelectDialog xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	noDataText=""
	multiSelect="false"
	growingThreshold=""
	contentWidth=""
	rememberSelections="false"
	contentHeight=""
	confirm=""
	search=""
	liveChange=""
	cancel="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.ColumnListItem -->
		<columns></columns> <!-- sap.m.Column -->
</TableSelectDialog>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Text" alias="Text">
	<jsTemplate><![CDATA[new sap.m.Text({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	text: "", // string
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	wrapping: true, // boolean
	textAlign: sap.ui.core.TextAlign.Begin, // sap.ui.core.TextAlign
	width: undefined, // sap.ui.core.CSSSize
	maxLines: undefined, // int, since 1.13.2
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Text xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	text=""
	textDirection="Inherit"
	wrapping="true"
	textAlign="Begin"
	width=""
	maxLines="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</Text>
]]></xmlTemplate>
</Template>
<Template name="sap.m.TextArea" alias="TextArea,Area">
	<jsTemplate><![CDATA[new sap.m.TextArea({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	value: undefined, // string
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	valueState: sap.ui.core.ValueState.None, // sap.ui.core.ValueState
	name: undefined, // string
	placeholder: undefined, // string
	editable: true, // boolean, since 1.12.0
	valueStateText: undefined, // string, since 1.26.0
	showValueStateMessage: true, // boolean, since 1.26.0
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign, since 1.26.0
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	rows: 2, // int
	cols: 20, // int
	height: undefined, // sap.ui.core.CSSSize
	maxLength: 0, // int
	wrapping: undefined, // sap.ui.core.Wrapping
	valueLiveUpdate: false, // boolean, since 1.30
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaLabelledBy: [], // sap.ui.core.Control, since 1.27.0
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	liveChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<TextArea xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	value=""
	width=""
	enabled="true"
	valueState="None"
	name=""
	placeholder=""
	editable="true"
	valueStateText=""
	showValueStateMessage="true"
	textAlign="Initial"
	textDirection="Inherit"
	rows="2"
	cols="20"
	height=""
	maxLength="0"
	wrapping=""
	valueLiveUpdate="false"
	ariaLabelledBy=""
	change=""
	liveChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</TextArea>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Tile" alias="Tile">
	<jsTemplate><![CDATA[new sap.m.Tile({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	removable: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Tile xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	removable="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</Tile>
]]></xmlTemplate>
</Template>
<Template name="sap.m.TileContainer" alias="TileContainer,Container">
	<jsTemplate><![CDATA[new sap.m.TileContainer({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	width: "100%", // sap.ui.core.CSSSize
	height: "100%", // sap.ui.core.CSSSize
	editable: undefined, // boolean
	allowAdd: undefined, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	tiles: [], // sap.ui.core.Control
	tileMove: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tileDelete: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	tileAdd: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<TileContainer xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	width="100%"
	height="100%"
	editable=""
	allowAdd=""
	tileMove=""
	tileDelete=""
	tileAdd="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<tiles></tiles> <!-- sap.ui.core.Control -->
</TileContainer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Title" alias="Title">
	<jsTemplate><![CDATA[new sap.m.Title({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	text: undefined, // string
	level: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	titleStyle: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	width: undefined, // sap.ui.core.CSSSize
	textAlign: sap.ui.core.TextAlign.Initial, // sap.ui.core.TextAlign
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	title: undefined // sap.ui.core.Title
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Title xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	text=""
	level="Auto"
	titleStyle="Auto"
	width=""
	textAlign="Initial"
	title="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</Title>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ToggleButton" alias="ToggleButton,Button">
	<jsTemplate><![CDATA[new sap.m.ToggleButton({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	text: undefined, // string
	type: sap.m.ButtonType.Default, // sap.m.ButtonType
	width: undefined, // sap.ui.core.CSSSize
	enabled: true, // boolean
	icon: undefined, // sap.ui.core.URI
	iconFirst: true, // boolean
	activeIcon: undefined, // sap.ui.core.URI
	iconDensityAware: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	pressed: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	tap: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ToggleButton xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	text=""
	type="Default"
	width=""
	enabled="true"
	icon=""
	iconFirst="true"
	activeIcon=""
	iconDensityAware="true"
	textDirection="Inherit"
	pressed="false"
	ariaDescribedBy=""
	ariaLabelledBy=""
	tap=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</ToggleButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Token" alias="Token">
	<jsTemplate><![CDATA[new sap.m.Token({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	selected: false, // boolean
	key: "", // string
	text: "", // string
	editable: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection, since 1.28.0
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	ariaDescribedBy: [], // sap.ui.core.Control
	ariaLabelledBy: [], // sap.ui.core.Control
	"delete": [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	select: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Token xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	selected="false"
	key=""
	text=""
	editable="true"
	textDirection="Inherit"
	ariaDescribedBy=""
	ariaLabelledBy=""
	"delete"=""
	press=""
	select="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</Token>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Tokenizer" alias="Tokenizer">
	<jsTemplate><![CDATA[new sap.m.Tokenizer({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	editable: true, // boolean
	width: undefined, // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	tokens: [], // sap.m.Token
	tokenChange: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Tokenizer xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	editable="true"
	width=""
	tokenChange="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<tokens></tokens> <!-- sap.m.Token -->
</Tokenizer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Toolbar" alias="Toolbar">
	<jsTemplate><![CDATA[new sap.m.Toolbar({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	width: undefined, // sap.ui.core.CSSSize
	active: false, // boolean
	enabled: true, // boolean
	height: "", // sap.ui.core.CSSSize
	design: sap.m.ToolbarDesign.Auto, // sap.m.ToolbarDesign, since 1.16.8
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [], // sap.ui.core.Control
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Toolbar xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	width=""
	active="false"
	enabled="true"
	height=""
	design="Auto"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
</Toolbar>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ToolbarLayoutData" alias="ToolbarLayoutData,Data">
	<jsTemplate><![CDATA[new sap.m.ToolbarLayoutData({
	id: "${id}", // sap.ui.core.ID
	shrinkable: false, // boolean
	minWidth: undefined, // sap.ui.core.CSSSize
	maxWidth: undefined, // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ToolbarLayoutData xmlns="sap.m"
	id="${id}"
	shrinkable="false"
	minWidth=""
	maxWidth="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</ToolbarLayoutData>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ToolbarSeparator" alias="ToolbarSeparator,Separator">
	<jsTemplate><![CDATA[new sap.m.ToolbarSeparator({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ToolbarSeparator xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</ToolbarSeparator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ToolbarSpacer" alias="ToolbarSpacer,Spacer">
	<jsTemplate><![CDATA[new sap.m.ToolbarSpacer({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	width: "", // sap.ui.core.CSSSize
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ToolbarSpacer xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	width="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</ToolbarSpacer>
]]></xmlTemplate>
</Template>
<Template name="sap.m.UploadCollection" alias="UploadCollection,Collection">
	<jsTemplate><![CDATA[new sap.m.UploadCollection({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	fileType: undefined, // string[]
	maximumFilenameLength: undefined, // int
	maximumFileSize: undefined, // float
	mimeType: undefined, // string[]
	multiple: false, // boolean
	noDataText: undefined, // string
	sameFilenameAllowed: false, // boolean
	showSeparators: sap.m.ListSeparators.All, // sap.m.ListSeparators
	uploadEnabled: true, // boolean
	uploadUrl: "../../../upload", // string
	instantUpload: true, // boolean, since 1.30
	numberOfAttachmentsText: undefined, // string, since 1.30
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.m.UploadCollectionItem
	headerParameters: [], // sap.m.UploadCollectionParameter
	parameters: [], // sap.m.UploadCollectionParameter
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	fileDeleted: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	filenameLengthExceed: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	fileRenamed: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	fileSizeExceed: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	typeMissmatch: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	uploadComplete: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	uploadTerminated: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	beforeUploadStarts: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<UploadCollection xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	fileType=""
	maximumFilenameLength=""
	maximumFileSize=""
	mimeType=""
	multiple="false"
	noDataText=""
	sameFilenameAllowed="false"
	showSeparators="All"
	uploadEnabled="true"
	uploadUrl="../../../upload"
	instantUpload="true"
	numberOfAttachmentsText=""
	change=""
	fileDeleted=""
	filenameLengthExceed=""
	fileRenamed=""
	fileSizeExceed=""
	typeMissmatch=""
	uploadComplete=""
	uploadTerminated=""
	beforeUploadStarts="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.UploadCollectionItem -->
		<headerParameters></headerParameters> <!-- sap.m.UploadCollectionParameter -->
		<parameters></parameters> <!-- sap.m.UploadCollectionParameter -->
</UploadCollection>
]]></xmlTemplate>
</Template>
<Template name="sap.m.UploadCollectionItem" alias="UploadCollectionItem,Item">
	<jsTemplate><![CDATA[new sap.m.UploadCollectionItem({
	id: "${id}", // sap.ui.core.ID
	contributor: undefined, // string
	documentId: undefined, // string
	fileName: undefined, // string
	fileSize: undefined, // float
	mimeType: undefined, // string
	thumbnailUrl: undefined, // string
	uploadedDate: undefined, // string
	url: undefined, // string
	enableEdit: true, // boolean
	enableDelete: true, // boolean
	visibleEdit: true, // boolean
	visibleDelete: true, // boolean
	ariaLabelForPicture: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	attributes: [], // sap.m.ObjectAttribute, since 1.30
	statuses: [], // sap.m.ObjectStatus, since 1.30
	fileUploader: undefined // sap.ui.unified.FileUploader
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<UploadCollectionItem xmlns="sap.m"
	id="${id}"
	contributor=""
	documentId=""
	fileName=""
	fileSize=""
	mimeType=""
	thumbnailUrl=""
	uploadedDate=""
	url=""
	enableEdit="true"
	enableDelete="true"
	visibleEdit="true"
	visibleDelete="true"
	ariaLabelForPicture=""
	fileUploader="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<attributes></attributes> <!-- sap.m.ObjectAttribute, since 1.30 -->
		<statuses></statuses> <!-- sap.m.ObjectStatus, since 1.30 -->
</UploadCollectionItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.UploadCollectionParameter" alias="UploadCollectionParameter,Parameter">
	<jsTemplate><![CDATA[new sap.m.UploadCollectionParameter({
	id: "${id}", // sap.ui.core.ID
	name: undefined, // string, since 1.12.2
	value: undefined, // string, since 1.12.2
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<UploadCollectionParameter xmlns="sap.m"
	id="${id}"
	name=""
	value="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</UploadCollectionParameter>
]]></xmlTemplate>
</Template>
<Template name="sap.m.VBox" alias="VBox">
	<jsTemplate><![CDATA[new sap.m.VBox({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	height: "", // sap.ui.core.CSSSize, since 1.9.1
	width: "", // sap.ui.core.CSSSize, since 1.9.1
	displayInline: false, // boolean
	direction: sap.m.FlexDirection.Row, // sap.m.FlexDirection
	fitContainer: false, // boolean
	renderType: sap.m.FlexRendertype.Div, // sap.m.FlexRendertype
	justifyContent: sap.m.FlexJustifyContent.Start, // sap.m.FlexJustifyContent
	alignItems: sap.m.FlexAlignItems.Stretch, // sap.m.FlexAlignItems
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [] // sap.ui.core.Control
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<VBox xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	height=""
	width=""
	displayInline="false"
	direction="Row"
	fitContainer="false"
	renderType="Div"
	justifyContent="Start"
	alignItems="Stretch">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.ui.core.Control -->
</VBox>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ViewSettingsCustomItem" alias="ViewSettingsCustomItem,Item">
	<jsTemplate><![CDATA[new sap.m.ViewSettingsCustomItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	selected: false, // boolean
	filterCount: 0, // int
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	customControl: undefined // sap.ui.core.Control
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ViewSettingsCustomItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	selected="false"
	filterCount="0">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<customControl></customControl> <!-- sap.ui.core.Control -->
</ViewSettingsCustomItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ViewSettingsCustomTab" alias="ViewSettingsCustomTab,Tab">
	<jsTemplate><![CDATA[new sap.m.ViewSettingsCustomTab({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	icon: "sap-icon://competitor", // sap.ui.core.URI
	title: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [] // sap.ui.core.Control
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ViewSettingsCustomTab xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	icon="sap-icon://competitor"
	title="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
</ViewSettingsCustomTab>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ViewSettingsDialog" alias="ViewSettingsDialog,Dialog">
	<jsTemplate><![CDATA[new sap.m.ViewSettingsDialog({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	sortDescending: false, // boolean
	groupDescending: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	sortItems: [], // sap.m.ViewSettingsItem
	groupItems: [], // sap.m.ViewSettingsItem
	filterItems: [], // sap.m.ViewSettingsItem
	presetFilterItems: [], // sap.m.ViewSettingsItem
	customTabs: [], // sap.m.ViewSettingsCustomTab
	selectedSortItem: undefined, // sap.m.ViewSettingsItem
	selectedGroupItem: undefined, // sap.m.ViewSettingsItem
	selectedPresetFilterItem: undefined, // sap.m.ViewSettingsItem
	confirm: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	cancel: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	resetFilters: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ViewSettingsDialog xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	sortDescending="false"
	groupDescending="false"
	selectedSortItem=""
	selectedGroupItem=""
	selectedPresetFilterItem=""
	confirm=""
	cancel=""
	resetFilters="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<sortItems></sortItems> <!-- sap.m.ViewSettingsItem -->
		<groupItems></groupItems> <!-- sap.m.ViewSettingsItem -->
		<filterItems></filterItems> <!-- sap.m.ViewSettingsItem -->
		<presetFilterItems></presetFilterItems> <!-- sap.m.ViewSettingsItem -->
		<customTabs></customTabs> <!-- sap.m.ViewSettingsCustomTab -->
</ViewSettingsDialog>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ViewSettingsFilterItem" alias="ViewSettingsFilterItem,Item">
	<jsTemplate><![CDATA[new sap.m.ViewSettingsFilterItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	selected: false, // boolean
	multiSelect: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [] // sap.m.ViewSettingsItem
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ViewSettingsFilterItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	selected="false"
	multiSelect="true">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.m.ViewSettingsItem -->
</ViewSettingsFilterItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.ViewSettingsItem" alias="ViewSettingsItem,Item">
	<jsTemplate><![CDATA[new sap.m.ViewSettingsItem({
	id: "${id}", // sap.ui.core.ID
	text: "", // string
	enabled: true, // boolean
	textDirection: sap.ui.core.TextDirection.Inherit, // sap.ui.core.TextDirection
	key: undefined, // string
	selected: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<ViewSettingsItem xmlns="sap.m"
	id="${id}"
	text=""
	enabled="true"
	textDirection="Inherit"
	key=""
	selected="false">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</ViewSettingsItem>
]]></xmlTemplate>
</Template>
<Template name="sap.m.Wizard" alias="Wizard">
	<jsTemplate><![CDATA[new sap.m.Wizard({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	width: "auto", // sap.ui.core.CSSSize
	height: "100%", // sap.ui.core.CSSSize
	showNextButton: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	steps: [], // sap.m.WizardStep
	stepActivate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	complete: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<Wizard xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	width="auto"
	height="100%"
	showNextButton="true"
	stepActivate=""
	complete="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<steps></steps> <!-- sap.m.WizardStep -->
</Wizard>
]]></xmlTemplate>
</Template>
<Template name="sap.m.WizardProgressNavigator" alias="WizardProgressNavigator,Navigator">
	<jsTemplate><![CDATA[new sap.m.WizardProgressNavigator({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	stepCount: 3, // int
	varyingStepCount: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	stepChanged: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	stepActivated: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<WizardProgressNavigator xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	stepCount="3"
	varyingStepCount="false"
	stepChanged=""
	stepActivated="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</WizardProgressNavigator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.WizardStep" alias="WizardStep,Step">
	<jsTemplate><![CDATA[new sap.m.WizardStep({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: "", // string
	validated: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	content: [], // sap.ui.core.Control
	complete: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this],
	activate: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<WizardStep xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	validated="true"
	complete=""
	activate="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<content></content> <!-- sap.ui.core.Control -->
</WizardStep>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.AddAction" alias="AddAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.AddAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/AddAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/AddAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.CancelAction" alias="CancelAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.CancelAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/CancelAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/CancelAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.DetailPage" alias="DetailPage,Page">
	<jsTemplate><![CDATA[new sap.m.semantic.DetailPage({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	titleLevel: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	showNavButton: false, // boolean
	showSubHeader: true, // boolean
	enableScrolling: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	subHeader: undefined, // sap.m.IBar
	content: [], // sap.ui.core.Control
	customHeaderContent: [], // sap.m.Button
	customFooterContent: [], // sap.m.Button
	customShareMenuContent: [], // sap.m.Button
	addAction: undefined, // sap.m.semantic.AddAction
	mainAction: undefined, // sap.m.semantic.MainAction
	positiveAction: undefined, // sap.m.semantic.PositiveAction
	negativeAction: undefined, // sap.m.semantic.NegativeAction
	forwardAction: undefined, // sap.m.semantic.ForwardAction
	editAction: undefined, // sap.m.semantic.EditAction
	saveAction: undefined, // sap.m.semantic.SaveAction
	cancelAction: undefined, // sap.m.semantic.CancelAction
	flagAction: undefined, // sap.m.semantic.FlagAction
	favoriteAction: undefined, // sap.m.semantic.FavoriteAction
	openInAction: undefined, // sap.m.semantic.OpenInAction
	discussInJamAction: undefined, // sap.m.semantic.DiscussInJamAction
	shareInJamAction: undefined, // sap.m.semantic.ShareInJamAction
	sendEmailAction: undefined, // sap.m.semantic.SendEmailAction
	sendMessageAction: undefined, // sap.m.semantic.SendMessageAction
	printAction: undefined, // sap.m.semantic.PrintAction
	messagesIndicator: undefined, // sap.m.semantic.MessagesIndicator
	saveAsTileAction: undefined, // sap.m.Button
	pagingAction: undefined, // sap.m.PagingButton
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/DetailPage xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	titleLevel="Auto"
	showNavButton="false"
	showSubHeader="true"
	enableScrolling="true"
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeaderContent></customHeaderContent> <!-- sap.m.Button -->
		<customFooterContent></customFooterContent> <!-- sap.m.Button -->
		<customShareMenuContent></customShareMenuContent> <!-- sap.m.Button -->
		<addAction></addAction> <!-- sap.m.semantic.AddAction -->
		<mainAction></mainAction> <!-- sap.m.semantic.MainAction -->
		<positiveAction></positiveAction> <!-- sap.m.semantic.PositiveAction -->
		<negativeAction></negativeAction> <!-- sap.m.semantic.NegativeAction -->
		<forwardAction></forwardAction> <!-- sap.m.semantic.ForwardAction -->
		<editAction></editAction> <!-- sap.m.semantic.EditAction -->
		<saveAction></saveAction> <!-- sap.m.semantic.SaveAction -->
		<cancelAction></cancelAction> <!-- sap.m.semantic.CancelAction -->
		<flagAction></flagAction> <!-- sap.m.semantic.FlagAction -->
		<favoriteAction></favoriteAction> <!-- sap.m.semantic.FavoriteAction -->
		<openInAction></openInAction> <!-- sap.m.semantic.OpenInAction -->
		<discussInJamAction></discussInJamAction> <!-- sap.m.semantic.DiscussInJamAction -->
		<shareInJamAction></shareInJamAction> <!-- sap.m.semantic.ShareInJamAction -->
		<sendEmailAction></sendEmailAction> <!-- sap.m.semantic.SendEmailAction -->
		<sendMessageAction></sendMessageAction> <!-- sap.m.semantic.SendMessageAction -->
		<printAction></printAction> <!-- sap.m.semantic.PrintAction -->
		<messagesIndicator></messagesIndicator> <!-- sap.m.semantic.MessagesIndicator -->
		<saveAsTileAction></saveAsTileAction> <!-- sap.m.Button -->
		<pagingAction></pagingAction> <!-- sap.m.PagingButton -->
</semantic/DetailPage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.DiscussInJamAction" alias="DiscussInJamAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.DiscussInJamAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/DiscussInJamAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/DiscussInJamAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.EditAction" alias="EditAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.EditAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/EditAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/EditAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.FavoriteAction" alias="FavoriteAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.FavoriteAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	pressed: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/FavoriteAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	pressed="false"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/FavoriteAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.FilterAction" alias="FilterAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.FilterAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/FilterAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/FilterAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.FilterSelect" alias="FilterSelect,Select">
	<jsTemplate><![CDATA[new sap.m.semantic.FilterSelect({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	selectedKey: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/FilterSelect xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	selectedKey=""
	selectedItem=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.ui.core.Item -->
</semantic/FilterSelect>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.FlagAction" alias="FlagAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.FlagAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	pressed: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/FlagAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	pressed="false"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/FlagAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.ForwardAction" alias="ForwardAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.ForwardAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/ForwardAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/ForwardAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.FullscreenPage" alias="FullscreenPage,Page">
	<jsTemplate><![CDATA[new sap.m.semantic.FullscreenPage({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	titleLevel: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	showNavButton: false, // boolean
	showSubHeader: true, // boolean
	enableScrolling: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	subHeader: undefined, // sap.m.IBar
	content: [], // sap.ui.core.Control
	customHeaderContent: [], // sap.m.Button
	customFooterContent: [], // sap.m.Button
	customShareMenuContent: [], // sap.m.Button
	addAction: undefined, // sap.m.semantic.AddAction
	mainAction: undefined, // sap.m.semantic.MainAction
	positiveAction: undefined, // sap.m.semantic.PositiveAction
	negativeAction: undefined, // sap.m.semantic.NegativeAction
	forwardAction: undefined, // sap.m.semantic.ForwardAction
	editAction: undefined, // sap.m.semantic.EditAction
	saveAction: undefined, // sap.m.semantic.SaveAction
	cancelAction: undefined, // sap.m.semantic.CancelAction
	flagAction: undefined, // sap.m.semantic.FlagAction
	favoriteAction: undefined, // sap.m.semantic.FavoriteAction
	openInAction: undefined, // sap.m.semantic.OpenInAction
	discussInJamAction: undefined, // sap.m.semantic.DiscussInJamAction
	shareInJamAction: undefined, // sap.m.semantic.ShareInJamAction
	sendEmailAction: undefined, // sap.m.semantic.SendEmailAction
	sendMessageAction: undefined, // sap.m.semantic.SendMessageAction
	printAction: undefined, // sap.m.semantic.PrintAction
	messagesIndicator: undefined, // sap.m.semantic.MessagesIndicator
	saveAsTileAction: undefined, // sap.m.Button
	pagingAction: undefined, // sap.m.PagingButton
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/FullscreenPage xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	titleLevel="Auto"
	showNavButton="false"
	showSubHeader="true"
	enableScrolling="true"
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeaderContent></customHeaderContent> <!-- sap.m.Button -->
		<customFooterContent></customFooterContent> <!-- sap.m.Button -->
		<customShareMenuContent></customShareMenuContent> <!-- sap.m.Button -->
		<addAction></addAction> <!-- sap.m.semantic.AddAction -->
		<mainAction></mainAction> <!-- sap.m.semantic.MainAction -->
		<positiveAction></positiveAction> <!-- sap.m.semantic.PositiveAction -->
		<negativeAction></negativeAction> <!-- sap.m.semantic.NegativeAction -->
		<forwardAction></forwardAction> <!-- sap.m.semantic.ForwardAction -->
		<editAction></editAction> <!-- sap.m.semantic.EditAction -->
		<saveAction></saveAction> <!-- sap.m.semantic.SaveAction -->
		<cancelAction></cancelAction> <!-- sap.m.semantic.CancelAction -->
		<flagAction></flagAction> <!-- sap.m.semantic.FlagAction -->
		<favoriteAction></favoriteAction> <!-- sap.m.semantic.FavoriteAction -->
		<openInAction></openInAction> <!-- sap.m.semantic.OpenInAction -->
		<discussInJamAction></discussInJamAction> <!-- sap.m.semantic.DiscussInJamAction -->
		<shareInJamAction></shareInJamAction> <!-- sap.m.semantic.ShareInJamAction -->
		<sendEmailAction></sendEmailAction> <!-- sap.m.semantic.SendEmailAction -->
		<sendMessageAction></sendMessageAction> <!-- sap.m.semantic.SendMessageAction -->
		<printAction></printAction> <!-- sap.m.semantic.PrintAction -->
		<messagesIndicator></messagesIndicator> <!-- sap.m.semantic.MessagesIndicator -->
		<saveAsTileAction></saveAsTileAction> <!-- sap.m.Button -->
		<pagingAction></pagingAction> <!-- sap.m.PagingButton -->
</semantic/FullscreenPage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.GroupAction" alias="GroupAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.GroupAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/GroupAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/GroupAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.GroupSelect" alias="GroupSelect,Select">
	<jsTemplate><![CDATA[new sap.m.semantic.GroupSelect({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	selectedKey: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/GroupSelect xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	selectedKey=""
	selectedItem=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.ui.core.Item -->
</semantic/GroupSelect>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.MainAction" alias="MainAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.MainAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	text: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/MainAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	text=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/MainAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.MasterPage" alias="MasterPage,Page">
	<jsTemplate><![CDATA[new sap.m.semantic.MasterPage({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	titleLevel: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	showNavButton: false, // boolean
	showSubHeader: true, // boolean
	enableScrolling: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	subHeader: undefined, // sap.m.IBar
	content: [], // sap.ui.core.Control
	customHeaderContent: [], // sap.m.Button
	customFooterContent: [], // sap.m.Button
	addAction: undefined, // sap.m.semantic.AddAction
	mainAction: undefined, // sap.m.semantic.MainAction
	positiveAction: undefined, // sap.m.semantic.PositiveAction
	negativeAction: undefined, // sap.m.semantic.NegativeAction
	multiSelectAction: undefined, // sap.m.semantic.MultiSelectAction
	forwardAction: undefined, // sap.m.semantic.ForwardAction
	editAction: undefined, // sap.m.semantic.EditAction
	saveAction: undefined, // sap.m.semantic.SaveAction
	cancelAction: undefined, // sap.m.semantic.CancelAction
	sort: undefined, // sap.m.semantic.ISort
	filter: undefined, // sap.m.semantic.IFilter
	group: undefined, // sap.m.semantic.IGroup
	messagesIndicator: undefined, // sap.m.semantic.MessagesIndicator
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/MasterPage xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	titleLevel="Auto"
	showNavButton="false"
	showSubHeader="true"
	enableScrolling="true"
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeaderContent></customHeaderContent> <!-- sap.m.Button -->
		<customFooterContent></customFooterContent> <!-- sap.m.Button -->
		<addAction></addAction> <!-- sap.m.semantic.AddAction -->
		<mainAction></mainAction> <!-- sap.m.semantic.MainAction -->
		<positiveAction></positiveAction> <!-- sap.m.semantic.PositiveAction -->
		<negativeAction></negativeAction> <!-- sap.m.semantic.NegativeAction -->
		<multiSelectAction></multiSelectAction> <!-- sap.m.semantic.MultiSelectAction -->
		<forwardAction></forwardAction> <!-- sap.m.semantic.ForwardAction -->
		<editAction></editAction> <!-- sap.m.semantic.EditAction -->
		<saveAction></saveAction> <!-- sap.m.semantic.SaveAction -->
		<cancelAction></cancelAction> <!-- sap.m.semantic.CancelAction -->
		<sort></sort> <!-- sap.m.semantic.ISort -->
		<filter></filter> <!-- sap.m.semantic.IFilter -->
		<group></group> <!-- sap.m.semantic.IGroup -->
		<messagesIndicator></messagesIndicator> <!-- sap.m.semantic.MessagesIndicator -->
</semantic/MasterPage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.MessagesIndicator" alias="MessagesIndicator,Indicator">
	<jsTemplate><![CDATA[new sap.m.semantic.MessagesIndicator({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/MessagesIndicator xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/MessagesIndicator>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.MultiSelectAction" alias="MultiSelectAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.MultiSelectAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	pressed: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/MultiSelectAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	pressed="false"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/MultiSelectAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.NegativeAction" alias="NegativeAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.NegativeAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	text: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/NegativeAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	text=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/NegativeAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.OpenInAction" alias="OpenInAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.OpenInAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/OpenInAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/OpenInAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.PositiveAction" alias="PositiveAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.PositiveAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	text: undefined, // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/PositiveAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	text=""
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/PositiveAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.PrintAction" alias="PrintAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.PrintAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/PrintAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/PrintAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SaveAction" alias="SaveAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.SaveAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SaveAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/SaveAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SemanticButton" alias="SemanticButton,Button">
	<jsTemplate><![CDATA[new sap.m.semantic.SemanticButton({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SemanticButton xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/SemanticButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SemanticControl" alias="SemanticControl,Control">
	<jsTemplate><![CDATA[new sap.m.semantic.SemanticControl({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [] // sap.ui.core.Control, since 1.19
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SemanticControl xmlns="sap.m"
	id="${id}"
	visible="true">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/SemanticControl>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SemanticPage" alias="SemanticPage,Page">
	<jsTemplate><![CDATA[new sap.m.semantic.SemanticPage({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	titleLevel: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	showNavButton: false, // boolean
	showSubHeader: true, // boolean
	enableScrolling: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	subHeader: undefined, // sap.m.IBar
	content: [], // sap.ui.core.Control
	customHeaderContent: [], // sap.m.Button
	customFooterContent: [], // sap.m.Button
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SemanticPage xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	titleLevel="Auto"
	showNavButton="false"
	showSubHeader="true"
	enableScrolling="true"
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeaderContent></customHeaderContent> <!-- sap.m.Button -->
		<customFooterContent></customFooterContent> <!-- sap.m.Button -->
</semantic/SemanticPage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SemanticSelect" alias="SemanticSelect,Select">
	<jsTemplate><![CDATA[new sap.m.semantic.SemanticSelect({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	selectedKey: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SemanticSelect xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	selectedKey=""
	selectedItem=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.ui.core.Item -->
</semantic/SemanticSelect>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SemanticToggleButton" alias="SemanticToggleButton,Button">
	<jsTemplate><![CDATA[new sap.m.semantic.SemanticToggleButton({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	pressed: false, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SemanticToggleButton xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	pressed="false"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/SemanticToggleButton>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SendEmailAction" alias="SendEmailAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.SendEmailAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SendEmailAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/SendEmailAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SendMessageAction" alias="SendMessageAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.SendMessageAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SendMessageAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/SendMessageAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.ShareInJamAction" alias="ShareInJamAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.ShareInJamAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/ShareInJamAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/ShareInJamAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.ShareMenuPage" alias="ShareMenuPage,Page">
	<jsTemplate><![CDATA[new sap.m.semantic.ShareMenuPage({
	id: "${id}", // sap.ui.core.ID
	busy: false, // boolean
	busyIndicatorDelay: 1000, // int
	visible: true, // boolean
	title: undefined, // string
	titleLevel: sap.ui.core.TitleLevel.Auto, // sap.ui.core.TitleLevel
	showNavButton: false, // boolean
	showSubHeader: true, // boolean
	enableScrolling: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	subHeader: undefined, // sap.m.IBar
	content: [], // sap.ui.core.Control
	customHeaderContent: [], // sap.m.Button
	customFooterContent: [], // sap.m.Button
	customShareMenuContent: [], // sap.m.Button
	navButtonPress: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/ShareMenuPage xmlns="sap.m"
	id="${id}"
	busy="false"
	busyIndicatorDelay="1000"
	visible="true"
	title=""
	titleLevel="Auto"
	showNavButton="false"
	showSubHeader="true"
	enableScrolling="true"
	navButtonPress="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<subHeader></subHeader> <!-- sap.m.IBar -->
		<content></content> <!-- sap.ui.core.Control -->
		<customHeaderContent></customHeaderContent> <!-- sap.m.Button -->
		<customFooterContent></customFooterContent> <!-- sap.m.Button -->
		<customShareMenuContent></customShareMenuContent> <!-- sap.m.Button -->
</semantic/ShareMenuPage>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SortAction" alias="SortAction,Action">
	<jsTemplate><![CDATA[new sap.m.semantic.SortAction({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	press: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SortAction xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	press="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
</semantic/SortAction>
]]></xmlTemplate>
</Template>
<Template name="sap.m.semantic.SortSelect" alias="SortSelect,Select">
	<jsTemplate><![CDATA[new sap.m.semantic.SortSelect({
	id: "${id}", // sap.ui.core.ID
	visible: true, // boolean
	enabled: true, // boolean
	selectedKey: "", // string
	tooltip: undefined, // sap.ui.core.TooltipBase
	customData: [], // sap.ui.core.CustomData
	dependents: [], // sap.ui.core.Control, since 1.19
	items: [], // sap.ui.core.Item
	selectedItem: undefined, // sap.ui.core.Item
	change: [function (oEvent) {
		var ${control} = oEvent.getSource();
	}, this]
})
]]></jsTemplate>
	<xmlTemplate><![CDATA[<semantic/SortSelect xmlns="sap.m"
	id="${id}"
	visible="true"
	enabled="true"
	selectedKey=""
	selectedItem=""
	change="">
		<tooltip></tooltip> <!-- sap.ui.core.TooltipBase -->
		<dependents></dependents> <!-- sap.ui.core.Control, since 1.19 -->
		<items></items> <!-- sap.ui.core.Item -->
</semantic/SortSelect>
]]></xmlTemplate>
</Template>
</Library>
