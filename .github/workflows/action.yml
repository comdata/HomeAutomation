name: Java CI
on: 
  push:
    branches: Main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn -B package -DskipTests=true --file pom.xml
#      - name: Try native build
#        run: ./mvnw package -DskipTests -Pnative -Dquarkus.native.container-build=true -Dquarkus.native.additional-build-args='--initialize-at-run-time=io.netty.handler.codec.http2.Http2CodecUtil\,io.netty.handler.codec.http2.Http2ClientUpgradeCodec\,io.netty.handler.codec.http2.DefaultHttp2FrameWriter\,io.netty.buffer.AbstractReferenceCountedByteBuf'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push to Docker Hub/GHCRIO
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            comdata456/homeautomation:latest
            ghcr.io/comdata/homeautomation:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
